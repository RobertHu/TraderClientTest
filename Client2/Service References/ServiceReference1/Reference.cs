//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionError", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum TransactionError : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLinkedServer = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RuntimeError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DbOperationFailed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionAlreadyExists = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasNoOrders = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidRelation = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLotBalance = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceedOpenLotBalance = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPrice = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountIsNotTrading = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountResetFailed = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstrumentIsNotAccepting = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimingIsNotAcceptable = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderTypeIsNotAcceptable = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasUnassignedOvernightOrders = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasNoAccountsLocked = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsLockedByAgent = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotLockedByAgent = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceedAssigningLotBalance = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LossExecutedOrderInOco = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLotExceedMaxLot = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenOrderNotExists = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssigningOrderNotExists = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionNotExists = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionCannotBeCanceled = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionCannotBeExecuted = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderCannotBeDeleted = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NecessaryIsNotWithinThreshold = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarginIsNotEnough = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotAccountOwner = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidOrderRelation = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TradePolicyIsNotActive = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetPriceTooCloseToMarket = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasNoQuotationExists = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountIsInAlerting = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DailyQuotationIsNotIntegrated = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitStopAddPositionNotAllowed = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MooMocNewPositionNotAllowed = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionCannotBeBooked = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlySptMktIsAllowedForPreCheck = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidTransactionPhase = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExecuteTimeMustBeInTradingTime = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseDataIntegralityViolated = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceIsOutOfDate = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortSellNotAllowed = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidInstalmentTrade = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrepaymentIsNotAllowed = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HitIsReseted = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistPendingLimitCloseOrder = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuySellCoExistNotAllow = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionExpired = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FillOnMarketCloseNotAllowed = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstrumentNotInTradePolicy = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmendedOrderNotFound = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InitialOrderCanNotBeAmended = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidResetStatusWhenAssign = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyValued = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutOfAcceptDQVariation = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceIsDisabled = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionStateViolated = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceChangedSincePlace = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceedMaxOpenLot = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplacedWithMaxLot = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceedMaxPhysicalValue = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BalanceOrEquityIsShort = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SplittedForHasShortSell = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdjustedToFullPaidOrderForHasShortSell = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOrderNotFound = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOnlyExecutedOrderAllowed = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOnlyOpenOrderAllowed = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseHasNoLotBalance = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOnlySameContractSizeAllowed = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOnlySameAccountAllowed = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOnlySameInstrumentAllowed = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseOppositeNotFound = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseNotSortByCode = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleCloseNotAllowed = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsCuttingByRemoteSystem = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Action_ShouldAutoFill = 10000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Action_NeedDealerConfirmCanceling = 10001,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RedoLimitOrder_PartialSuccess = 20001,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RedoLimitOrder_AllFailed = 20002,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionData", Namespace="http://schemas.datacontract.org/2004/07/Protocal")]
    [System.SerializableAttribute()]
    public partial class TransactionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.ExpireType ExpireTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FreeLmtVariationCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FreePlacingPreCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid InstrumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.OrderType OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.OrderData[] OrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PlaceByRiskMonitorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SetPriceTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> SourceOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.TransactionSubType SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SubmitorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.TransactionType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((this.BeginTimeField.Equals(value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.ExpireType ExpireType {
            get {
                return this.ExpireTypeField;
            }
            set {
                if ((this.ExpireTypeField.Equals(value) != true)) {
                    this.ExpireTypeField = value;
                    this.RaisePropertyChanged("ExpireType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FreeLmtVariationCheck {
            get {
                return this.FreeLmtVariationCheckField;
            }
            set {
                if ((this.FreeLmtVariationCheckField.Equals(value) != true)) {
                    this.FreeLmtVariationCheckField = value;
                    this.RaisePropertyChanged("FreeLmtVariationCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FreePlacingPreCheck {
            get {
                return this.FreePlacingPreCheckField;
            }
            set {
                if ((this.FreePlacingPreCheckField.Equals(value) != true)) {
                    this.FreePlacingPreCheckField = value;
                    this.RaisePropertyChanged("FreePlacingPreCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid InstrumentId {
            get {
                return this.InstrumentIdField;
            }
            set {
                if ((this.InstrumentIdField.Equals(value) != true)) {
                    this.InstrumentIdField = value;
                    this.RaisePropertyChanged("InstrumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.OrderType OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.OrderData[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PlaceByRiskMonitor {
            get {
                return this.PlaceByRiskMonitorField;
            }
            set {
                if ((this.PlaceByRiskMonitorField.Equals(value) != true)) {
                    this.PlaceByRiskMonitorField = value;
                    this.RaisePropertyChanged("PlaceByRiskMonitor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SetPriceTimestamp {
            get {
                return this.SetPriceTimestampField;
            }
            set {
                if ((this.SetPriceTimestampField.Equals(value) != true)) {
                    this.SetPriceTimestampField = value;
                    this.RaisePropertyChanged("SetPriceTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SourceOrderId {
            get {
                return this.SourceOrderIdField;
            }
            set {
                if ((this.SourceOrderIdField.Equals(value) != true)) {
                    this.SourceOrderIdField = value;
                    this.RaisePropertyChanged("SourceOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.TransactionSubType SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((this.SubTypeField.Equals(value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmitTime {
            get {
                return this.SubmitTimeField;
            }
            set {
                if ((this.SubmitTimeField.Equals(value) != true)) {
                    this.SubmitTimeField = value;
                    this.RaisePropertyChanged("SubmitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SubmitorId {
            get {
                return this.SubmitorIdField;
            }
            set {
                if ((this.SubmitorIdField.Equals(value) != true)) {
                    this.SubmitorIdField = value;
                    this.RaisePropertyChanged("SubmitorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.TransactionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpireType", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum ExpireType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GTC = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IOC = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GTD = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Session = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FillOrKill = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FillAndKill = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderType", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum OrderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpotTrade = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Limit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Market = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarketOnOpen = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarketOnClose = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneCancelOther = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Risk = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stop = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleClose = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarketToLimit = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StopLimit = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAK_Market = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinaryOption = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderData", Namespace="http://schemas.datacontract.org/2004/07/Protocal")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client2.ServiceReference1.PhysicalOrderData))]
    public partial class OrderData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlotterCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DQMaxMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableAcceptLmtVariationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecutePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LotBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.OrderRelaitonData[] OrderRelationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OriginalLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PriceIsQuoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PriceTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SetPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SetPrice2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetPriceMaxMovePipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.TradeOption TradeOptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlotterCode {
            get {
                return this.BlotterCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BlotterCodeField, value) != true)) {
                    this.BlotterCodeField = value;
                    this.RaisePropertyChanged("BlotterCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DQMaxMove {
            get {
                return this.DQMaxMoveField;
            }
            set {
                if ((this.DQMaxMoveField.Equals(value) != true)) {
                    this.DQMaxMoveField = value;
                    this.RaisePropertyChanged("DQMaxMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableAcceptLmtVariation {
            get {
                return this.DisableAcceptLmtVariationField;
            }
            set {
                if ((this.DisableAcceptLmtVariationField.Equals(value) != true)) {
                    this.DisableAcceptLmtVariationField = value;
                    this.RaisePropertyChanged("DisableAcceptLmtVariation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutePrice {
            get {
                return this.ExecutePriceField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutePriceField, value) != true)) {
                    this.ExecutePriceField = value;
                    this.RaisePropertyChanged("ExecutePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBuy {
            get {
                return this.IsBuyField;
            }
            set {
                if ((this.IsBuyField.Equals(value) != true)) {
                    this.IsBuyField = value;
                    this.RaisePropertyChanged("IsBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOpen {
            get {
                return this.IsOpenField;
            }
            set {
                if ((this.IsOpenField.Equals(value) != true)) {
                    this.IsOpenField = value;
                    this.RaisePropertyChanged("IsOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lot {
            get {
                return this.LotField;
            }
            set {
                if ((this.LotField.Equals(value) != true)) {
                    this.LotField = value;
                    this.RaisePropertyChanged("Lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LotBalance {
            get {
                return this.LotBalanceField;
            }
            set {
                if ((this.LotBalanceField.Equals(value) != true)) {
                    this.LotBalanceField = value;
                    this.RaisePropertyChanged("LotBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.OrderRelaitonData[] OrderRelations {
            get {
                return this.OrderRelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderRelationsField, value) != true)) {
                    this.OrderRelationsField = value;
                    this.RaisePropertyChanged("OrderRelations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginCode {
            get {
                return this.OriginCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginCodeField, value) != true)) {
                    this.OriginCodeField = value;
                    this.RaisePropertyChanged("OriginCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OriginalLot {
            get {
                return this.OriginalLotField;
            }
            set {
                if ((this.OriginalLotField.Equals(value) != true)) {
                    this.OriginalLotField = value;
                    this.RaisePropertyChanged("OriginalLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PriceIsQuote {
            get {
                return this.PriceIsQuoteField;
            }
            set {
                if ((this.PriceIsQuoteField.Equals(value) != true)) {
                    this.PriceIsQuoteField = value;
                    this.RaisePropertyChanged("PriceIsQuote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PriceTimestamp {
            get {
                return this.PriceTimestampField;
            }
            set {
                if ((this.PriceTimestampField.Equals(value) != true)) {
                    this.PriceTimestampField = value;
                    this.RaisePropertyChanged("PriceTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SetPrice {
            get {
                return this.SetPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.SetPriceField, value) != true)) {
                    this.SetPriceField = value;
                    this.RaisePropertyChanged("SetPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SetPrice2 {
            get {
                return this.SetPrice2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SetPrice2Field, value) != true)) {
                    this.SetPrice2Field = value;
                    this.RaisePropertyChanged("SetPrice2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetPriceMaxMovePips {
            get {
                return this.SetPriceMaxMovePipsField;
            }
            set {
                if ((this.SetPriceMaxMovePipsField.Equals(value) != true)) {
                    this.SetPriceMaxMovePipsField = value;
                    this.RaisePropertyChanged("SetPriceMaxMovePips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.TradeOption TradeOption {
            get {
                return this.TradeOptionField;
            }
            set {
                if ((this.TradeOptionField.Equals(value) != true)) {
                    this.TradeOptionField = value;
                    this.RaisePropertyChanged("TradeOption");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionSubType", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum TransactionSubType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Amend = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IfDone = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Match = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assign = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mapping = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionType", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum TransactionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Single = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pair = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneCancelOther = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleClose = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assign = 100,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalOrderData", Namespace="http://schemas.datacontract.org/2004/07/Protocal.Physical")]
    [System.SerializableAttribute()]
    public partial class PhysicalOrderData : Client2.ServiceReference1.OrderData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.DeliveryPart DeliveryPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.InstalmentPart InstalmentPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PhysicalPaidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.PhysicalTradeSide PhysicalTradeSideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysicalValueMatureDayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.DeliveryPart DeliveryPart {
            get {
                return this.DeliveryPartField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryPartField, value) != true)) {
                    this.DeliveryPartField = value;
                    this.RaisePropertyChanged("DeliveryPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.InstalmentPart InstalmentPart {
            get {
                return this.InstalmentPartField;
            }
            set {
                if ((object.ReferenceEquals(this.InstalmentPartField, value) != true)) {
                    this.InstalmentPartField = value;
                    this.RaisePropertyChanged("InstalmentPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PhysicalPaidAmount {
            get {
                return this.PhysicalPaidAmountField;
            }
            set {
                if ((this.PhysicalPaidAmountField.Equals(value) != true)) {
                    this.PhysicalPaidAmountField = value;
                    this.RaisePropertyChanged("PhysicalPaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.PhysicalTradeSide PhysicalTradeSide {
            get {
                return this.PhysicalTradeSideField;
            }
            set {
                if ((this.PhysicalTradeSideField.Equals(value) != true)) {
                    this.PhysicalTradeSideField = value;
                    this.RaisePropertyChanged("PhysicalTradeSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysicalValueMatureDay {
            get {
                return this.PhysicalValueMatureDayField;
            }
            set {
                if ((this.PhysicalValueMatureDayField.Equals(value) != true)) {
                    this.PhysicalValueMatureDayField = value;
                    this.RaisePropertyChanged("PhysicalValueMatureDay");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderRelaitonData", Namespace="http://schemas.datacontract.org/2004/07/Protocal")]
    [System.SerializableAttribute()]
    public partial class OrderRelaitonData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CloseOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClosedLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OpenOrderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CloseOrderId {
            get {
                return this.CloseOrderIdField;
            }
            set {
                if ((this.CloseOrderIdField.Equals(value) != true)) {
                    this.CloseOrderIdField = value;
                    this.RaisePropertyChanged("CloseOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClosedLot {
            get {
                return this.ClosedLotField;
            }
            set {
                if ((this.ClosedLotField.Equals(value) != true)) {
                    this.ClosedLotField = value;
                    this.RaisePropertyChanged("ClosedLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OpenOrderId {
            get {
                return this.OpenOrderIdField;
            }
            set {
                if ((this.OpenOrderIdField.Equals(value) != true)) {
                    this.OpenOrderIdField = value;
                    this.RaisePropertyChanged("OpenOrderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeOption", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum TradeOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stop = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Better = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryPart", Namespace="http://schemas.datacontract.org/2004/07/Protocal.Physical")]
    [System.SerializableAttribute()]
    public partial class DeliveryPart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeliveryLockLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PhysicalRequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeliveryLockLot {
            get {
                return this.DeliveryLockLotField;
            }
            set {
                if ((this.DeliveryLockLotField.Equals(value) != true)) {
                    this.DeliveryLockLotField = value;
                    this.RaisePropertyChanged("DeliveryLockLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PhysicalRequestId {
            get {
                return this.PhysicalRequestIdField;
            }
            set {
                if ((this.PhysicalRequestIdField.Equals(value) != true)) {
                    this.PhysicalRequestIdField = value;
                    this.RaisePropertyChanged("PhysicalRequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstalmentPart", Namespace="http://schemas.datacontract.org/2004/07/Protocal.Physical")]
    [System.SerializableAttribute()]
    public partial class InstalmentPart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DownPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.InstalmentFrequence InstalmentFrequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid InstalmentPolicyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.InstalmentType InstalmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client2.ServiceReference1.RecalculateRateType RecalculateRateTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DownPayment {
            get {
                return this.DownPaymentField;
            }
            set {
                if ((this.DownPaymentField.Equals(value) != true)) {
                    this.DownPaymentField = value;
                    this.RaisePropertyChanged("DownPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.InstalmentFrequence InstalmentFrequence {
            get {
                return this.InstalmentFrequenceField;
            }
            set {
                if ((this.InstalmentFrequenceField.Equals(value) != true)) {
                    this.InstalmentFrequenceField = value;
                    this.RaisePropertyChanged("InstalmentFrequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid InstalmentPolicyId {
            get {
                return this.InstalmentPolicyIdField;
            }
            set {
                if ((this.InstalmentPolicyIdField.Equals(value) != true)) {
                    this.InstalmentPolicyIdField = value;
                    this.RaisePropertyChanged("InstalmentPolicyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.InstalmentType InstalmentType {
            get {
                return this.InstalmentTypeField;
            }
            set {
                if ((this.InstalmentTypeField.Equals(value) != true)) {
                    this.InstalmentTypeField = value;
                    this.RaisePropertyChanged("InstalmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client2.ServiceReference1.RecalculateRateType RecalculateRateType {
            get {
                return this.RecalculateRateTypeField;
            }
            set {
                if ((this.RecalculateRateTypeField.Equals(value) != true)) {
                    this.RecalculateRateTypeField = value;
                    this.RaisePropertyChanged("RecalculateRateType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalTradeSide", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum PhysicalTradeSide : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sell = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShortSell = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delivery = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstalmentFrequence", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum InstalmentFrequence : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TillPayoff = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Season = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TwoWeek = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstalmentType", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum InstalmentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullAmount = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualPrincipal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EqualInstallment = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecalculateRateType", Namespace="http://schemas.datacontract.org/2004/07/iExchange.Common")]
    public enum RecalculateRateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextMonth = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextYear = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderInstalmentData", Namespace="http://schemas.datacontract.org/2004/07/Protocal.Physical")]
    [System.SerializableAttribute()]
    public partial class OrderInstalmentData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebitInterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InterestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PaidDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PaymentDateTimeOnPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrincipalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UpdatePersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebitInterest {
            get {
                return this.DebitInterestField;
            }
            set {
                if ((this.DebitInterestField.Equals(value) != true)) {
                    this.DebitInterestField = value;
                    this.RaisePropertyChanged("DebitInterest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Interest {
            get {
                return this.InterestField;
            }
            set {
                if ((this.InterestField.Equals(value) != true)) {
                    this.InterestField = value;
                    this.RaisePropertyChanged("Interest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PaidDateTime {
            get {
                return this.PaidDateTimeField;
            }
            set {
                if ((this.PaidDateTimeField.Equals(value) != true)) {
                    this.PaidDateTimeField = value;
                    this.RaisePropertyChanged("PaidDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PaymentDateTimeOnPlan {
            get {
                return this.PaymentDateTimeOnPlanField;
            }
            set {
                if ((this.PaymentDateTimeOnPlanField.Equals(value) != true)) {
                    this.PaymentDateTimeOnPlanField = value;
                    this.RaisePropertyChanged("PaymentDateTimeOnPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Principal {
            get {
                return this.PrincipalField;
            }
            set {
                if ((this.PrincipalField.Equals(value) != true)) {
                    this.PrincipalField = value;
                    this.RaisePropertyChanged("Principal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UpdatePersonId {
            get {
                return this.UpdatePersonIdField;
            }
            set {
                if ((this.UpdatePersonIdField.Equals(value) != true)) {
                    this.UpdatePersonIdField = value;
                    this.RaisePropertyChanged("UpdatePersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServerService")]
    public interface IServerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/PlaceByXml", ReplyAction="http://tempuri.org/IServerService/PlaceByXmlResponse")]
        Client2.ServiceReference1.TransactionError PlaceByXml(string tranXml, bool placeByRiskMonitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/PlaceByXml", ReplyAction="http://tempuri.org/IServerService/PlaceByXmlResponse")]
        System.Threading.Tasks.Task<Client2.ServiceReference1.TransactionError> PlaceByXmlAsync(string tranXml, bool placeByRiskMonitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Place", ReplyAction="http://tempuri.org/IServerService/PlaceResponse")]
        Client2.ServiceReference1.TransactionError Place(Client2.ServiceReference1.TransactionData tranData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Place", ReplyAction="http://tempuri.org/IServerService/PlaceResponse")]
        System.Threading.Tasks.Task<Client2.ServiceReference1.TransactionError> PlaceAsync(Client2.ServiceReference1.TransactionData tranData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/PlaceByModel", ReplyAction="http://tempuri.org/IServerService/PlaceByModelResponse")]
        void PlaceByModel(Client2.ServiceReference1.TransactionData tranData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/PlaceByModel", ReplyAction="http://tempuri.org/IServerService/PlaceByModelResponse")]
        System.Threading.Tasks.Task PlaceByModelAsync(Client2.ServiceReference1.TransactionData tranData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Test", ReplyAction="http://tempuri.org/IServerService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/Test", ReplyAction="http://tempuri.org/IServerService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetInitData", ReplyAction="http://tempuri.org/IServerService/GetInitDataResponse")]
        string GetInitData(System.Guid[] accountIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetInitData", ReplyAction="http://tempuri.org/IServerService/GetInitDataResponse")]
        System.Threading.Tasks.Task<string> GetInitDataAsync(System.Guid[] accountIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetOrderInstalments", ReplyAction="http://tempuri.org/IServerService/GetOrderInstalmentsResponse")]
        Client2.ServiceReference1.OrderInstalmentData[] GetOrderInstalments(System.Guid orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerService/GetOrderInstalments", ReplyAction="http://tempuri.org/IServerService/GetOrderInstalmentsResponse")]
        System.Threading.Tasks.Task<Client2.ServiceReference1.OrderInstalmentData[]> GetOrderInstalmentsAsync(System.Guid orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerServiceChannel : Client2.ServiceReference1.IServerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerServiceClient : System.ServiceModel.ClientBase<Client2.ServiceReference1.IServerService>, Client2.ServiceReference1.IServerService {
        
        public ServerServiceClient() {
        }
        
        public ServerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client2.ServiceReference1.TransactionError PlaceByXml(string tranXml, bool placeByRiskMonitor) {
            return base.Channel.PlaceByXml(tranXml, placeByRiskMonitor);
        }
        
        public System.Threading.Tasks.Task<Client2.ServiceReference1.TransactionError> PlaceByXmlAsync(string tranXml, bool placeByRiskMonitor) {
            return base.Channel.PlaceByXmlAsync(tranXml, placeByRiskMonitor);
        }
        
        public Client2.ServiceReference1.TransactionError Place(Client2.ServiceReference1.TransactionData tranData) {
            return base.Channel.Place(tranData);
        }
        
        public System.Threading.Tasks.Task<Client2.ServiceReference1.TransactionError> PlaceAsync(Client2.ServiceReference1.TransactionData tranData) {
            return base.Channel.PlaceAsync(tranData);
        }
        
        public void PlaceByModel(Client2.ServiceReference1.TransactionData tranData) {
            base.Channel.PlaceByModel(tranData);
        }
        
        public System.Threading.Tasks.Task PlaceByModelAsync(Client2.ServiceReference1.TransactionData tranData) {
            return base.Channel.PlaceByModelAsync(tranData);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public string GetInitData(System.Guid[] accountIds) {
            return base.Channel.GetInitData(accountIds);
        }
        
        public System.Threading.Tasks.Task<string> GetInitDataAsync(System.Guid[] accountIds) {
            return base.Channel.GetInitDataAsync(accountIds);
        }
        
        public Client2.ServiceReference1.OrderInstalmentData[] GetOrderInstalments(System.Guid orderId) {
            return base.Channel.GetOrderInstalments(orderId);
        }
        
        public System.Threading.Tasks.Task<Client2.ServiceReference1.OrderInstalmentData[]> GetOrderInstalmentsAsync(System.Guid orderId) {
            return base.Channel.GetOrderInstalmentsAsync(orderId);
        }
    }
}
