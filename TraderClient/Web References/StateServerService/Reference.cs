//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace TraderClient.StateServerService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    using iExchange.Common;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.omnicare.com/StateServer/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetPriceAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyTelephonePinResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeclineTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInitDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInitData2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplayQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlushQuotationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBestLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback DiscardQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInstrumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDealingPolicyDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuotePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuotePoliciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstrumentForSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInstrumentSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInstrumentSetting2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuoteWithSetPriceMaxMovePipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Quote2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChatOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyDeliveryApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyDeliveredOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyScrapDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyScrapDepositCanceledOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectCancelLmtOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback MultipleCloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetHitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetAlertLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccounts5OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenInterestInstrumentSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenInterestSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenInterestSummaryOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupNetPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupNetPositionInstrumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsForCutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsForInitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersForGetAutoPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RedoLimitOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFromTNUOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SetActiveSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetActiveSourceInstrumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccounts2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAcountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemoryBalanceNecessaryEquityExcludeAlertedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHighLowOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreHighLowOperationCompleted;
        
        private System.Threading.SendOrPostCallback FixOverridedQuotationHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetHistoryQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOverridedQuotationHighLowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchInfoCommandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeLeverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstalmentPayoffOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::TraderClient.Properties.Settings.Default.TraderClient_StateServerService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetPriceAlertsCompletedEventHandler SetPriceAlertsCompleted;
        
        /// <remarks/>
        public event NotifyTelephonePinResetCompletedEventHandler NotifyTelephonePinResetCompleted;
        
        /// <remarks/>
        public event ApplyTransferCompletedEventHandler ApplyTransferCompleted;
        
        /// <remarks/>
        public event AcceptTransferCompletedEventHandler AcceptTransferCompleted;
        
        /// <remarks/>
        public event DeclineTransferCompletedEventHandler DeclineTransferCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetStateCompletedEventHandler GetStateCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event UnRegisterCompletedEventHandler UnRegisterCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetInitDataCompletedEventHandler GetInitDataCompleted;
        
        /// <remarks/>
        public event GetInitData2CompletedEventHandler GetInitData2Completed;
        
        /// <remarks/>
        public event ReplayQuotationCompletedEventHandler ReplayQuotationCompleted;
        
        /// <remarks/>
        public event SetQuotationCompletedEventHandler SetQuotationCompleted;
        
        /// <remarks/>
        public event FlushQuotationsCompletedEventHandler FlushQuotationsCompleted;
        
        /// <remarks/>
        public event SetBestLimitCompletedEventHandler SetBestLimitCompleted;
        
        /// <remarks/>
        public event DiscardQuotationCompletedEventHandler DiscardQuotationCompleted;
        
        /// <remarks/>
        public event UpdateInstrumentCompletedEventHandler UpdateInstrumentCompleted;
        
        /// <remarks/>
        public event UpdateDealingPolicyDetailCompletedEventHandler UpdateDealingPolicyDetailCompleted;
        
        /// <remarks/>
        public event UpdateCustomerPolicyCompletedEventHandler UpdateCustomerPolicyCompleted;
        
        /// <remarks/>
        public event UpdateEmployeePolicyCompletedEventHandler UpdateEmployeePolicyCompleted;
        
        /// <remarks/>
        public event UpdateQuotePolicyCompletedEventHandler UpdateQuotePolicyCompleted;
        
        /// <remarks/>
        public event UpdateQuotePoliciesCompletedEventHandler UpdateQuotePoliciesCompleted;
        
        /// <remarks/>
        public event GetInstrumentForSettingCompletedEventHandler GetInstrumentForSettingCompleted;
        
        /// <remarks/>
        public event UpdateInstrumentSettingCompletedEventHandler UpdateInstrumentSettingCompleted;
        
        /// <remarks/>
        public event UpdateInstrumentSetting2CompletedEventHandler UpdateInstrumentSetting2Completed;
        
        /// <remarks/>
        public event UpdateOrderCompletedEventHandler UpdateOrderCompleted;
        
        /// <remarks/>
        public event UpdateAccountLockCompletedEventHandler UpdateAccountLockCompleted;
        
        /// <remarks/>
        public event QuoteCompletedEventHandler QuoteCompleted;
        
        /// <remarks/>
        public event QuoteWithSetPriceMaxMovePipsCompletedEventHandler QuoteWithSetPriceMaxMovePipsCompleted;
        
        /// <remarks/>
        public event Quote2CompletedEventHandler Quote2Completed;
        
        /// <remarks/>
        public event CancelQuoteCompletedEventHandler CancelQuoteCompleted;
        
        /// <remarks/>
        public event ChatCompletedEventHandler ChatCompleted;
        
        /// <remarks/>
        public event AnswerCompletedEventHandler AnswerCompleted;
        
        /// <remarks/>
        public event PlaceCompletedEventHandler PlaceCompleted;
        
        /// <remarks/>
        public event ApplyDeliveryCompletedEventHandler ApplyDeliveryCompleted;
        
        /// <remarks/>
        public event CancelDeliveryCompletedEventHandler CancelDeliveryCompleted;
        
        /// <remarks/>
        public event NotifyDeliveryApprovedCompletedEventHandler NotifyDeliveryApprovedCompleted;
        
        /// <remarks/>
        public event NotifyDeliveryCompletedEventHandler NotifyDeliveryCompleted;
        
        /// <remarks/>
        public event NotifyDeliveredCompletedEventHandler NotifyDeliveredCompleted;
        
        /// <remarks/>
        public event NotifyScrapDepositCompletedEventHandler NotifyScrapDepositCompleted;
        
        /// <remarks/>
        public event NotifyScrapDepositCanceledCompletedEventHandler NotifyScrapDepositCanceledCompleted;
        
        /// <remarks/>
        public event CancelCompletedEventHandler CancelCompleted;
        
        /// <remarks/>
        public event EmailCompletedEventHandler EmailCompleted;
        
        /// <remarks/>
        public event RejectCancelLmtOrderCompletedEventHandler RejectCancelLmtOrderCompleted;
        
        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;
        
        /// <remarks/>
        public event MultipleCloseCompletedEventHandler MultipleCloseCompleted;
        
        /// <remarks/>
        public event AssignCompletedEventHandler AssignCompleted;
        
        /// <remarks/>
        public event BookCompletedEventHandler BookCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event ResetHitCompletedEventHandler ResetHitCompleted;
        
        /// <remarks/>
        public event ResetAlertLevelCompletedEventHandler ResetAlertLevelCompleted;
        
        /// <remarks/>
        public event GetAccountsCompletedEventHandler GetAccountsCompleted;
        
        /// <remarks/>
        public event GetAccounts5CompletedEventHandler GetAccounts5Completed;
        
        /// <remarks/>
        public event GetOpenInterestInstrumentSummaryCompletedEventHandler GetOpenInterestInstrumentSummaryCompleted;
        
        /// <remarks/>
        public event GetOpenInterestSummaryCompletedEventHandler GetOpenInterestSummaryCompleted;
        
        /// <remarks/>
        public event GetOpenInterestSummaryOrderListCompletedEventHandler GetOpenInterestSummaryOrderListCompleted;
        
        /// <remarks/>
        public event GetGroupNetPositionCompletedEventHandler GetGroupNetPositionCompleted;
        
        /// <remarks/>
        public event GetGroupNetPositionInstrumentCompletedEventHandler GetGroupNetPositionInstrumentCompleted;
        
        /// <remarks/>
        public event GetAccountsForCutCompletedEventHandler GetAccountsForCutCompleted;
        
        /// <remarks/>
        public event GetAccountsForInitCompletedEventHandler GetAccountsForInitCompleted;
        
        /// <remarks/>
        public event GetOrdersForGetAutoPriceCompletedEventHandler GetOrdersForGetAutoPriceCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event RedoLimitOrderCompletedEventHandler RedoLimitOrderCompleted;
        
        /// <remarks/>
        public event UpdateFromTNUCompletedEventHandler UpdateFromTNUCompleted;
        
        /// <remarks/>
        public event Update1CompletedEventHandler Update1Completed;
        
        /// <remarks/>
        public event SetActiveSourceCompletedEventHandler SetActiveSourceCompleted;
        
        /// <remarks/>
        public event SetActiveSourceInstrumentCompletedEventHandler SetActiveSourceInstrumentCompleted;
        
        /// <remarks/>
        public event VerifyTransactionCompletedEventHandler VerifyTransactionCompleted;
        
        /// <remarks/>
        public event GetAccounts2CompletedEventHandler GetAccounts2Completed;
        
        /// <remarks/>
        public event GetOrdersCompletedEventHandler GetOrdersCompleted;
        
        /// <remarks/>
        public event AcceptPlaceCompletedEventHandler AcceptPlaceCompleted;
        
        /// <remarks/>
        public event GetAcountInfoCompletedEventHandler GetAcountInfoCompleted;
        
        /// <remarks/>
        public event GetMemoryBalanceNecessaryEquityExcludeAlertedCompletedEventHandler GetMemoryBalanceNecessaryEquityExcludeAlertedCompleted;
        
        /// <remarks/>
        public event SetNewsCompletedEventHandler SetNewsCompleted;
        
        /// <remarks/>
        public event UpdateHighLowCompletedEventHandler UpdateHighLowCompleted;
        
        /// <remarks/>
        public event RestoreHighLowCompletedEventHandler RestoreHighLowCompleted;
        
        /// <remarks/>
        public event FixOverridedQuotationHistoryCompletedEventHandler FixOverridedQuotationHistoryCompleted;
        
        /// <remarks/>
        public event SetHistoryQuotationCompletedEventHandler SetHistoryQuotationCompleted;
        
        /// <remarks/>
        public event UpdateOverridedQuotationHighLowCompletedEventHandler UpdateOverridedQuotationHighLowCompleted;
        
        /// <remarks/>
        public event GetAccountStatusCompletedEventHandler GetAccountStatusCompleted;
        
        /// <remarks/>
        public event GetMatchInfoCommandsCompletedEventHandler GetMatchInfoCommandsCompleted;
        
        /// <remarks/>
        public event ChangeLeverageCompletedEventHandler ChangeLeverageCompleted;
        
        /// <remarks/>
        public event NotifyPasswordChangedCompletedEventHandler NotifyPasswordChangedCompleted;
        
        /// <remarks/>
        public event InstalmentPayoffCompletedEventHandler InstalmentPayoffCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetPriceAlerts", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPriceAlerts(Token token, System.Xml.XmlNode priceAlertsNode) {
            object[] results = this.Invoke("SetPriceAlerts", new object[] {
                        token,
                        priceAlertsNode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPriceAlertsAsync(Token token, System.Xml.XmlNode priceAlertsNode) {
            this.SetPriceAlertsAsync(token, priceAlertsNode, null);
        }
        
        /// <remarks/>
        public void SetPriceAlertsAsync(Token token, System.Xml.XmlNode priceAlertsNode, object userState) {
            if ((this.SetPriceAlertsOperationCompleted == null)) {
                this.SetPriceAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPriceAlertsOperationCompleted);
            }
            this.InvokeAsync("SetPriceAlerts", new object[] {
                        token,
                        priceAlertsNode}, this.SetPriceAlertsOperationCompleted, userState);
        }
        
        private void OnSetPriceAlertsOperationCompleted(object arg) {
            if ((this.SetPriceAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPriceAlertsCompleted(this, new SetPriceAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyTelephonePinReset", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyTelephonePinReset(System.Guid customerId, System.Guid accountId, string verificationCode) {
            object[] results = this.Invoke("NotifyTelephonePinReset", new object[] {
                        customerId,
                        accountId,
                        verificationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyTelephonePinResetAsync(System.Guid customerId, System.Guid accountId, string verificationCode) {
            this.NotifyTelephonePinResetAsync(customerId, accountId, verificationCode, null);
        }
        
        /// <remarks/>
        public void NotifyTelephonePinResetAsync(System.Guid customerId, System.Guid accountId, string verificationCode, object userState) {
            if ((this.NotifyTelephonePinResetOperationCompleted == null)) {
                this.NotifyTelephonePinResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyTelephonePinResetOperationCompleted);
            }
            this.InvokeAsync("NotifyTelephonePinReset", new object[] {
                        customerId,
                        accountId,
                        verificationCode}, this.NotifyTelephonePinResetOperationCompleted, userState);
        }
        
        private void OnNotifyTelephonePinResetOperationCompleted(object arg) {
            if ((this.NotifyTelephonePinResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyTelephonePinResetCompleted(this, new NotifyTelephonePinResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ApplyTransfer", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError ApplyTransfer(Token token, System.Guid sourceAccountID, System.Guid sourceCurrencyID, decimal sourceAmount, System.Guid targetAccountID, System.Guid targetCurrencyID, decimal targetAmount, decimal rate, System.DateTime expireDate) {
            object[] results = this.Invoke("ApplyTransfer", new object[] {
                        token,
                        sourceAccountID,
                        sourceCurrencyID,
                        sourceAmount,
                        targetAccountID,
                        targetCurrencyID,
                        targetAmount,
                        rate,
                        expireDate});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyTransferAsync(Token token, System.Guid sourceAccountID, System.Guid sourceCurrencyID, decimal sourceAmount, System.Guid targetAccountID, System.Guid targetCurrencyID, decimal targetAmount, decimal rate, System.DateTime expireDate) {
            this.ApplyTransferAsync(token, sourceAccountID, sourceCurrencyID, sourceAmount, targetAccountID, targetCurrencyID, targetAmount, rate, expireDate, null);
        }
        
        /// <remarks/>
        public void ApplyTransferAsync(Token token, System.Guid sourceAccountID, System.Guid sourceCurrencyID, decimal sourceAmount, System.Guid targetAccountID, System.Guid targetCurrencyID, decimal targetAmount, decimal rate, System.DateTime expireDate, object userState) {
            if ((this.ApplyTransferOperationCompleted == null)) {
                this.ApplyTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyTransferOperationCompleted);
            }
            this.InvokeAsync("ApplyTransfer", new object[] {
                        token,
                        sourceAccountID,
                        sourceCurrencyID,
                        sourceAmount,
                        targetAccountID,
                        targetCurrencyID,
                        targetAmount,
                        rate,
                        expireDate}, this.ApplyTransferOperationCompleted, userState);
        }
        
        private void OnApplyTransferOperationCompleted(object arg) {
            if ((this.ApplyTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyTransferCompleted(this, new ApplyTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/AcceptTransfer", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError AcceptTransfer(Token token, System.Guid transferID) {
            object[] results = this.Invoke("AcceptTransfer", new object[] {
                        token,
                        transferID});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptTransferAsync(Token token, System.Guid transferID) {
            this.AcceptTransferAsync(token, transferID, null);
        }
        
        /// <remarks/>
        public void AcceptTransferAsync(Token token, System.Guid transferID, object userState) {
            if ((this.AcceptTransferOperationCompleted == null)) {
                this.AcceptTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptTransferOperationCompleted);
            }
            this.InvokeAsync("AcceptTransfer", new object[] {
                        token,
                        transferID}, this.AcceptTransferOperationCompleted, userState);
        }
        
        private void OnAcceptTransferOperationCompleted(object arg) {
            if ((this.AcceptTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptTransferCompleted(this, new AcceptTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/DeclineTransfer", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError DeclineTransfer(Token token, System.Guid transferID) {
            object[] results = this.Invoke("DeclineTransfer", new object[] {
                        token,
                        transferID});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void DeclineTransferAsync(Token token, System.Guid transferID) {
            this.DeclineTransferAsync(token, transferID, null);
        }
        
        /// <remarks/>
        public void DeclineTransferAsync(Token token, System.Guid transferID, object userState) {
            if ((this.DeclineTransferOperationCompleted == null)) {
                this.DeclineTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeclineTransferOperationCompleted);
            }
            this.InvokeAsync("DeclineTransfer", new object[] {
                        token,
                        transferID}, this.DeclineTransferOperationCompleted, userState);
        }
        
        private void OnDeclineTransferOperationCompleted(object arg) {
            if ((this.DeclineTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeclineTransferCompleted(this, new DeclineTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/HelloWorld", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetState", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetState() {
            object[] results = this.Invoke("GetState", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateAsync() {
            this.GetStateAsync(null);
        }
        
        /// <remarks/>
        public void GetStateAsync(object userState) {
            if ((this.GetStateOperationCompleted == null)) {
                this.GetStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateOperationCompleted);
            }
            this.InvokeAsync("GetState", new object[0], this.GetStateOperationCompleted, userState);
        }
        
        private void OnGetStateOperationCompleted(object arg) {
            if ((this.GetStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateCompleted(this, new GetStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Register", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Register(Token token, string url) {
            object[] results = this.Invoke("Register", new object[] {
                        token,
                        url});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(Token token, string url) {
            this.RegisterAsync(token, url, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(Token token, string url, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        token,
                        url}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UnRegister", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnRegister(Token token, string url) {
            object[] results = this.Invoke("UnRegister", new object[] {
                        token,
                        url});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnRegisterAsync(Token token, string url) {
            this.UnRegisterAsync(token, url, null);
        }
        
        /// <remarks/>
        public void UnRegisterAsync(Token token, string url, object userState) {
            if ((this.UnRegisterOperationCompleted == null)) {
                this.UnRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnRegisterOperationCompleted);
            }
            this.InvokeAsync("UnRegister", new object[] {
                        token,
                        url}, this.UnRegisterOperationCompleted, userState);
        }
        
        private void OnUnRegisterOperationCompleted(object arg) {
            if ((this.UnRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnRegisterCompleted(this, new UnRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Login", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(Token token) {
            object[] results = this.Invoke("Login", new object[] {
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(Token token) {
            this.LoginAsync(token, null);
        }
        
        /// <remarks/>
        public void LoginAsync(Token token, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        token}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Logout", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Logout(Token token) {
            object[] results = this.Invoke("Logout", new object[] {
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync(Token token) {
            this.LogoutAsync(token, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(Token token, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        token}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ChangePassword", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(Token token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] oldPassword, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        token,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(Token token, byte[] oldPassword, byte[] newPassword) {
            this.ChangePasswordAsync(token, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(Token token, byte[] oldPassword, byte[] newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        token,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetInitData", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInitData(Token token, System.Xml.XmlNode permittedKeys, out int commandSequence) {
            object[] results = this.Invoke("GetInitData", new object[] {
                        token,
                        permittedKeys});
            commandSequence = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInitDataAsync(Token token, System.Xml.XmlNode permittedKeys) {
            this.GetInitDataAsync(token, permittedKeys, null);
        }
        
        /// <remarks/>
        public void GetInitDataAsync(Token token, System.Xml.XmlNode permittedKeys, object userState) {
            if ((this.GetInitDataOperationCompleted == null)) {
                this.GetInitDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInitDataOperationCompleted);
            }
            this.InvokeAsync("GetInitData", new object[] {
                        token,
                        permittedKeys}, this.GetInitDataOperationCompleted, userState);
        }
        
        private void OnGetInitDataOperationCompleted(object arg) {
            if ((this.GetInitDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInitDataCompleted(this, new GetInitDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetInitData2", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInitData2(Token token, System.Xml.XmlNode permittedKeys, System.Xml.XmlNode permittedKeys2, out int commandSequence) {
            object[] results = this.Invoke("GetInitData2", new object[] {
                        token,
                        permittedKeys,
                        permittedKeys2});
            commandSequence = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInitData2Async(Token token, System.Xml.XmlNode permittedKeys, System.Xml.XmlNode permittedKeys2) {
            this.GetInitData2Async(token, permittedKeys, permittedKeys2, null);
        }
        
        /// <remarks/>
        public void GetInitData2Async(Token token, System.Xml.XmlNode permittedKeys, System.Xml.XmlNode permittedKeys2, object userState) {
            if ((this.GetInitData2OperationCompleted == null)) {
                this.GetInitData2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInitData2OperationCompleted);
            }
            this.InvokeAsync("GetInitData2", new object[] {
                        token,
                        permittedKeys,
                        permittedKeys2}, this.GetInitData2OperationCompleted, userState);
        }
        
        private void OnGetInitData2OperationCompleted(object arg) {
            if ((this.GetInitData2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInitData2Completed(this, new GetInitData2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ReplayQuotation", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReplayQuotation(Token token, string quotation) {
            object[] results = this.Invoke("ReplayQuotation", new object[] {
                        token,
                        quotation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReplayQuotationAsync(Token token, string quotation) {
            this.ReplayQuotationAsync(token, quotation, null);
        }
        
        /// <remarks/>
        public void ReplayQuotationAsync(Token token, string quotation, object userState) {
            if ((this.ReplayQuotationOperationCompleted == null)) {
                this.ReplayQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplayQuotationOperationCompleted);
            }
            this.InvokeAsync("ReplayQuotation", new object[] {
                        token,
                        quotation}, this.ReplayQuotationOperationCompleted, userState);
        }
        
        private void OnReplayQuotationOperationCompleted(object arg) {
            if ((this.ReplayQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplayQuotationCompleted(this, new ReplayQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetQuotation", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetQuotation(Token token, string quotation) {
            object[] results = this.Invoke("SetQuotation", new object[] {
                        token,
                        quotation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetQuotationAsync(Token token, string quotation) {
            this.SetQuotationAsync(token, quotation, null);
        }
        
        /// <remarks/>
        public void SetQuotationAsync(Token token, string quotation, object userState) {
            if ((this.SetQuotationOperationCompleted == null)) {
                this.SetQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetQuotationOperationCompleted);
            }
            this.InvokeAsync("SetQuotation", new object[] {
                        token,
                        quotation}, this.SetQuotationOperationCompleted, userState);
        }
        
        private void OnSetQuotationOperationCompleted(object arg) {
            if ((this.SetQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetQuotationCompleted(this, new SetQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/FlushQuotations", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FlushQuotations(Token token, string quotation) {
            object[] results = this.Invoke("FlushQuotations", new object[] {
                        token,
                        quotation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FlushQuotationsAsync(Token token, string quotation) {
            this.FlushQuotationsAsync(token, quotation, null);
        }
        
        /// <remarks/>
        public void FlushQuotationsAsync(Token token, string quotation, object userState) {
            if ((this.FlushQuotationsOperationCompleted == null)) {
                this.FlushQuotationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlushQuotationsOperationCompleted);
            }
            this.InvokeAsync("FlushQuotations", new object[] {
                        token,
                        quotation}, this.FlushQuotationsOperationCompleted, userState);
        }
        
        private void OnFlushQuotationsOperationCompleted(object arg) {
            if ((this.FlushQuotationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlushQuotationsCompleted(this, new FlushQuotationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetBestLimit", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetBestLimit(Token token, BestLimit[] bestLimits) {
            object[] results = this.Invoke("SetBestLimit", new object[] {
                        token,
                        bestLimits});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetBestLimitAsync(Token token, BestLimit[] bestLimits) {
            this.SetBestLimitAsync(token, bestLimits, null);
        }
        
        /// <remarks/>
        public void SetBestLimitAsync(Token token, BestLimit[] bestLimits, object userState) {
            if ((this.SetBestLimitOperationCompleted == null)) {
                this.SetBestLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBestLimitOperationCompleted);
            }
            this.InvokeAsync("SetBestLimit", new object[] {
                        token,
                        bestLimits}, this.SetBestLimitOperationCompleted, userState);
        }
        
        private void OnSetBestLimitOperationCompleted(object arg) {
            if ((this.SetBestLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBestLimitCompleted(this, new SetBestLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/DiscardQuotation", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DiscardQuotation(Token token, System.Guid instrumentID) {
            object[] results = this.Invoke("DiscardQuotation", new object[] {
                        token,
                        instrumentID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DiscardQuotationAsync(Token token, System.Guid instrumentID) {
            this.DiscardQuotationAsync(token, instrumentID, null);
        }
        
        /// <remarks/>
        public void DiscardQuotationAsync(Token token, System.Guid instrumentID, object userState) {
            if ((this.DiscardQuotationOperationCompleted == null)) {
                this.DiscardQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDiscardQuotationOperationCompleted);
            }
            this.InvokeAsync("DiscardQuotation", new object[] {
                        token,
                        instrumentID}, this.DiscardQuotationOperationCompleted, userState);
        }
        
        private void OnDiscardQuotationOperationCompleted(object arg) {
            if ((this.DiscardQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DiscardQuotationCompleted(this, new DiscardQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateInstrument", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateInstrument(Token token, System.Xml.XmlNode instrument) {
            object[] results = this.Invoke("UpdateInstrument", new object[] {
                        token,
                        instrument});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInstrumentAsync(Token token, System.Xml.XmlNode instrument) {
            this.UpdateInstrumentAsync(token, instrument, null);
        }
        
        /// <remarks/>
        public void UpdateInstrumentAsync(Token token, System.Xml.XmlNode instrument, object userState) {
            if ((this.UpdateInstrumentOperationCompleted == null)) {
                this.UpdateInstrumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInstrumentOperationCompleted);
            }
            this.InvokeAsync("UpdateInstrument", new object[] {
                        token,
                        instrument}, this.UpdateInstrumentOperationCompleted, userState);
        }
        
        private void OnUpdateInstrumentOperationCompleted(object arg) {
            if ((this.UpdateInstrumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInstrumentCompleted(this, new UpdateInstrumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateDealingPolicyDetail", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDealingPolicyDetail(Token token, System.Xml.XmlNode dealingPolicyDetail) {
            object[] results = this.Invoke("UpdateDealingPolicyDetail", new object[] {
                        token,
                        dealingPolicyDetail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDealingPolicyDetailAsync(Token token, System.Xml.XmlNode dealingPolicyDetail) {
            this.UpdateDealingPolicyDetailAsync(token, dealingPolicyDetail, null);
        }
        
        /// <remarks/>
        public void UpdateDealingPolicyDetailAsync(Token token, System.Xml.XmlNode dealingPolicyDetail, object userState) {
            if ((this.UpdateDealingPolicyDetailOperationCompleted == null)) {
                this.UpdateDealingPolicyDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDealingPolicyDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateDealingPolicyDetail", new object[] {
                        token,
                        dealingPolicyDetail}, this.UpdateDealingPolicyDetailOperationCompleted, userState);
        }
        
        private void OnUpdateDealingPolicyDetailOperationCompleted(object arg) {
            if ((this.UpdateDealingPolicyDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDealingPolicyDetailCompleted(this, new UpdateDealingPolicyDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateCustomerPolicy", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCustomerPolicy(Token token, System.Xml.XmlNode customerPolicyNodes) {
            object[] results = this.Invoke("UpdateCustomerPolicy", new object[] {
                        token,
                        customerPolicyNodes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerPolicyAsync(Token token, System.Xml.XmlNode customerPolicyNodes) {
            this.UpdateCustomerPolicyAsync(token, customerPolicyNodes, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerPolicyAsync(Token token, System.Xml.XmlNode customerPolicyNodes, object userState) {
            if ((this.UpdateCustomerPolicyOperationCompleted == null)) {
                this.UpdateCustomerPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerPolicyOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerPolicy", new object[] {
                        token,
                        customerPolicyNodes}, this.UpdateCustomerPolicyOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerPolicyOperationCompleted(object arg) {
            if ((this.UpdateCustomerPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerPolicyCompleted(this, new UpdateCustomerPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateEmployeePolicy", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmployeePolicy(Token token, System.Xml.XmlNode employeePolicyNodes) {
            object[] results = this.Invoke("UpdateEmployeePolicy", new object[] {
                        token,
                        employeePolicyNodes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeePolicyAsync(Token token, System.Xml.XmlNode employeePolicyNodes) {
            this.UpdateEmployeePolicyAsync(token, employeePolicyNodes, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeePolicyAsync(Token token, System.Xml.XmlNode employeePolicyNodes, object userState) {
            if ((this.UpdateEmployeePolicyOperationCompleted == null)) {
                this.UpdateEmployeePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeePolicyOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployeePolicy", new object[] {
                        token,
                        employeePolicyNodes}, this.UpdateEmployeePolicyOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeePolicyOperationCompleted(object arg) {
            if ((this.UpdateEmployeePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeePolicyCompleted(this, new UpdateEmployeePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateQuotePolicy", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateQuotePolicy(Token token, System.Xml.XmlNode quotePolicy, out int error) {
            object[] results = this.Invoke("UpdateQuotePolicy", new object[] {
                        token,
                        quotePolicy});
            error = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuotePolicyAsync(Token token, System.Xml.XmlNode quotePolicy) {
            this.UpdateQuotePolicyAsync(token, quotePolicy, null);
        }
        
        /// <remarks/>
        public void UpdateQuotePolicyAsync(Token token, System.Xml.XmlNode quotePolicy, object userState) {
            if ((this.UpdateQuotePolicyOperationCompleted == null)) {
                this.UpdateQuotePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuotePolicyOperationCompleted);
            }
            this.InvokeAsync("UpdateQuotePolicy", new object[] {
                        token,
                        quotePolicy}, this.UpdateQuotePolicyOperationCompleted, userState);
        }
        
        private void OnUpdateQuotePolicyOperationCompleted(object arg) {
            if ((this.UpdateQuotePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuotePolicyCompleted(this, new UpdateQuotePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateQuotePolicies", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateQuotePolicies(Token token, System.Xml.XmlNode quotePolicies, out int error) {
            object[] results = this.Invoke("UpdateQuotePolicies", new object[] {
                        token,
                        quotePolicies});
            error = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuotePoliciesAsync(Token token, System.Xml.XmlNode quotePolicies) {
            this.UpdateQuotePoliciesAsync(token, quotePolicies, null);
        }
        
        /// <remarks/>
        public void UpdateQuotePoliciesAsync(Token token, System.Xml.XmlNode quotePolicies, object userState) {
            if ((this.UpdateQuotePoliciesOperationCompleted == null)) {
                this.UpdateQuotePoliciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuotePoliciesOperationCompleted);
            }
            this.InvokeAsync("UpdateQuotePolicies", new object[] {
                        token,
                        quotePolicies}, this.UpdateQuotePoliciesOperationCompleted, userState);
        }
        
        private void OnUpdateQuotePoliciesOperationCompleted(object arg) {
            if ((this.UpdateQuotePoliciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuotePoliciesCompleted(this, new UpdateQuotePoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetInstrumentForSetting", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInstrumentForSetting(Token token) {
            object[] results = this.Invoke("GetInstrumentForSetting", new object[] {
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstrumentForSettingAsync(Token token) {
            this.GetInstrumentForSettingAsync(token, null);
        }
        
        /// <remarks/>
        public void GetInstrumentForSettingAsync(Token token, object userState) {
            if ((this.GetInstrumentForSettingOperationCompleted == null)) {
                this.GetInstrumentForSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstrumentForSettingOperationCompleted);
            }
            this.InvokeAsync("GetInstrumentForSetting", new object[] {
                        token}, this.GetInstrumentForSettingOperationCompleted, userState);
        }
        
        private void OnGetInstrumentForSettingOperationCompleted(object arg) {
            if ((this.GetInstrumentForSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstrumentForSettingCompleted(this, new GetInstrumentForSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateInstrumentSetting", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateInstrumentSetting(Token token, System.Xml.XmlNode instrumentSetting) {
            object[] results = this.Invoke("UpdateInstrumentSetting", new object[] {
                        token,
                        instrumentSetting});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInstrumentSettingAsync(Token token, System.Xml.XmlNode instrumentSetting) {
            this.UpdateInstrumentSettingAsync(token, instrumentSetting, null);
        }
        
        /// <remarks/>
        public void UpdateInstrumentSettingAsync(Token token, System.Xml.XmlNode instrumentSetting, object userState) {
            if ((this.UpdateInstrumentSettingOperationCompleted == null)) {
                this.UpdateInstrumentSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInstrumentSettingOperationCompleted);
            }
            this.InvokeAsync("UpdateInstrumentSetting", new object[] {
                        token,
                        instrumentSetting}, this.UpdateInstrumentSettingOperationCompleted, userState);
        }
        
        private void OnUpdateInstrumentSettingOperationCompleted(object arg) {
            if ((this.UpdateInstrumentSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInstrumentSettingCompleted(this, new UpdateInstrumentSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateInstrumentSetting2", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateInstrumentSetting2(Token token, System.Xml.XmlNode permittedKeys, System.Xml.XmlNode instrumentSetting) {
            object[] results = this.Invoke("UpdateInstrumentSetting2", new object[] {
                        token,
                        permittedKeys,
                        instrumentSetting});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInstrumentSetting2Async(Token token, System.Xml.XmlNode permittedKeys, System.Xml.XmlNode instrumentSetting) {
            this.UpdateInstrumentSetting2Async(token, permittedKeys, instrumentSetting, null);
        }
        
        /// <remarks/>
        public void UpdateInstrumentSetting2Async(Token token, System.Xml.XmlNode permittedKeys, System.Xml.XmlNode instrumentSetting, object userState) {
            if ((this.UpdateInstrumentSetting2OperationCompleted == null)) {
                this.UpdateInstrumentSetting2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInstrumentSetting2OperationCompleted);
            }
            this.InvokeAsync("UpdateInstrumentSetting2", new object[] {
                        token,
                        permittedKeys,
                        instrumentSetting}, this.UpdateInstrumentSetting2OperationCompleted, userState);
        }
        
        private void OnUpdateInstrumentSetting2OperationCompleted(object arg) {
            if ((this.UpdateInstrumentSetting2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInstrumentSetting2Completed(this, new UpdateInstrumentSetting2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateOrder", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOrder(Token token, System.Xml.XmlNode orders) {
            object[] results = this.Invoke("UpdateOrder", new object[] {
                        token,
                        orders});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderAsync(Token token, System.Xml.XmlNode orders) {
            this.UpdateOrderAsync(token, orders, null);
        }
        
        /// <remarks/>
        public void UpdateOrderAsync(Token token, System.Xml.XmlNode orders, object userState) {
            if ((this.UpdateOrderOperationCompleted == null)) {
                this.UpdateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderOperationCompleted);
            }
            this.InvokeAsync("UpdateOrder", new object[] {
                        token,
                        orders}, this.UpdateOrderOperationCompleted, userState);
        }
        
        private void OnUpdateOrderOperationCompleted(object arg) {
            if ((this.UpdateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderCompleted(this, new UpdateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateAccountLock", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccountLock(Token token, System.Xml.XmlNode accountLockChanges) {
            object[] results = this.Invoke("UpdateAccountLock", new object[] {
                        token,
                        accountLockChanges});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountLockAsync(Token token, System.Xml.XmlNode accountLockChanges) {
            this.UpdateAccountLockAsync(token, accountLockChanges, null);
        }
        
        /// <remarks/>
        public void UpdateAccountLockAsync(Token token, System.Xml.XmlNode accountLockChanges, object userState) {
            if ((this.UpdateAccountLockOperationCompleted == null)) {
                this.UpdateAccountLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountLockOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountLock", new object[] {
                        token,
                        accountLockChanges}, this.UpdateAccountLockOperationCompleted, userState);
        }
        
        private void OnUpdateAccountLockOperationCompleted(object arg) {
            if ((this.UpdateAccountLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountLockCompleted(this, new UpdateAccountLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Quote", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Quote(Token token, System.Guid instrumentID, double quoteLot, int BSStatus) {
            this.Invoke("Quote", new object[] {
                        token,
                        instrumentID,
                        quoteLot,
                        BSStatus});
        }
        
        /// <remarks/>
        public void QuoteAsync(Token token, System.Guid instrumentID, double quoteLot, int BSStatus) {
            this.QuoteAsync(token, instrumentID, quoteLot, BSStatus, null);
        }
        
        /// <remarks/>
        public void QuoteAsync(Token token, System.Guid instrumentID, double quoteLot, int BSStatus, object userState) {
            if ((this.QuoteOperationCompleted == null)) {
                this.QuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteOperationCompleted);
            }
            this.InvokeAsync("Quote", new object[] {
                        token,
                        instrumentID,
                        quoteLot,
                        BSStatus}, this.QuoteOperationCompleted, userState);
        }
        
        private void OnQuoteOperationCompleted(object arg) {
            if ((this.QuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/QuoteWithSetPriceMaxMovePips", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QuoteWithSetPriceMaxMovePips(Token token, System.Guid instrumentID, double quoteLot, int BSStatus, int setPriceMaxMovePips) {
            this.Invoke("QuoteWithSetPriceMaxMovePips", new object[] {
                        token,
                        instrumentID,
                        quoteLot,
                        BSStatus,
                        setPriceMaxMovePips});
        }
        
        /// <remarks/>
        public void QuoteWithSetPriceMaxMovePipsAsync(Token token, System.Guid instrumentID, double quoteLot, int BSStatus, int setPriceMaxMovePips) {
            this.QuoteWithSetPriceMaxMovePipsAsync(token, instrumentID, quoteLot, BSStatus, setPriceMaxMovePips, null);
        }
        
        /// <remarks/>
        public void QuoteWithSetPriceMaxMovePipsAsync(Token token, System.Guid instrumentID, double quoteLot, int BSStatus, int setPriceMaxMovePips, object userState) {
            if ((this.QuoteWithSetPriceMaxMovePipsOperationCompleted == null)) {
                this.QuoteWithSetPriceMaxMovePipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteWithSetPriceMaxMovePipsOperationCompleted);
            }
            this.InvokeAsync("QuoteWithSetPriceMaxMovePips", new object[] {
                        token,
                        instrumentID,
                        quoteLot,
                        BSStatus,
                        setPriceMaxMovePips}, this.QuoteWithSetPriceMaxMovePipsOperationCompleted, userState);
        }
        
        private void OnQuoteWithSetPriceMaxMovePipsOperationCompleted(object arg) {
            if ((this.QuoteWithSetPriceMaxMovePipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuoteWithSetPriceMaxMovePipsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Quote2", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Quote2(Token token, System.Guid instrumentID, double buyQuoteLot, double sellQuoteLot, int tick) {
            this.Invoke("Quote2", new object[] {
                        token,
                        instrumentID,
                        buyQuoteLot,
                        sellQuoteLot,
                        tick});
        }
        
        /// <remarks/>
        public void Quote2Async(Token token, System.Guid instrumentID, double buyQuoteLot, double sellQuoteLot, int tick) {
            this.Quote2Async(token, instrumentID, buyQuoteLot, sellQuoteLot, tick, null);
        }
        
        /// <remarks/>
        public void Quote2Async(Token token, System.Guid instrumentID, double buyQuoteLot, double sellQuoteLot, int tick, object userState) {
            if ((this.Quote2OperationCompleted == null)) {
                this.Quote2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuote2OperationCompleted);
            }
            this.InvokeAsync("Quote2", new object[] {
                        token,
                        instrumentID,
                        buyQuoteLot,
                        sellQuoteLot,
                        tick}, this.Quote2OperationCompleted, userState);
        }
        
        private void OnQuote2OperationCompleted(object arg) {
            if ((this.Quote2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Quote2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/CancelQuote", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelQuote(Token token, System.Guid instrumentID, double buyQuoteLot, double sellQuoteLot) {
            this.Invoke("CancelQuote", new object[] {
                        token,
                        instrumentID,
                        buyQuoteLot,
                        sellQuoteLot});
        }
        
        /// <remarks/>
        public void CancelQuoteAsync(Token token, System.Guid instrumentID, double buyQuoteLot, double sellQuoteLot) {
            this.CancelQuoteAsync(token, instrumentID, buyQuoteLot, sellQuoteLot, null);
        }
        
        /// <remarks/>
        public void CancelQuoteAsync(Token token, System.Guid instrumentID, double buyQuoteLot, double sellQuoteLot, object userState) {
            if ((this.CancelQuoteOperationCompleted == null)) {
                this.CancelQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelQuoteOperationCompleted);
            }
            this.InvokeAsync("CancelQuote", new object[] {
                        token,
                        instrumentID,
                        buyQuoteLot,
                        sellQuoteLot}, this.CancelQuoteOperationCompleted, userState);
        }
        
        private void OnCancelQuoteOperationCompleted(object arg) {
            if ((this.CancelQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelQuoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Chat", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Chat(Token token, System.Xml.XmlNode message) {
            this.Invoke("Chat", new object[] {
                        token,
                        message});
        }
        
        /// <remarks/>
        public void ChatAsync(Token token, System.Xml.XmlNode message) {
            this.ChatAsync(token, message, null);
        }
        
        /// <remarks/>
        public void ChatAsync(Token token, System.Xml.XmlNode message, object userState) {
            if ((this.ChatOperationCompleted == null)) {
                this.ChatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChatOperationCompleted);
            }
            this.InvokeAsync("Chat", new object[] {
                        token,
                        message}, this.ChatOperationCompleted, userState);
        }
        
        private void OnChatOperationCompleted(object arg) {
            if ((this.ChatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Answer", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Answer(Token token, System.Xml.XmlNode quotation) {
            this.Invoke("Answer", new object[] {
                        token,
                        quotation});
        }
        
        /// <remarks/>
        public void AnswerAsync(Token token, System.Xml.XmlNode quotation) {
            this.AnswerAsync(token, quotation, null);
        }
        
        /// <remarks/>
        public void AnswerAsync(Token token, System.Xml.XmlNode quotation, object userState) {
            if ((this.AnswerOperationCompleted == null)) {
                this.AnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnswerOperationCompleted);
            }
            this.InvokeAsync("Answer", new object[] {
                        token,
                        quotation}, this.AnswerOperationCompleted, userState);
        }
        
        private void OnAnswerOperationCompleted(object arg) {
            if ((this.AnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnswerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Place", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Place(iExchange.Common.Token token, System.Xml.XmlNode tran, out string tranCode) {
            object[] results = this.Invoke("Place", new object[] {
                        token,
                        tran});
            tranCode = ((string)(results[1]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceAsync(Token token, System.Xml.XmlNode tran) {
            this.PlaceAsync(token, tran, null);
        }
        
        /// <remarks/>
        public void PlaceAsync(Token token, System.Xml.XmlNode tran, object userState) {
            if ((this.PlaceOperationCompleted == null)) {
                this.PlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceOperationCompleted);
            }
            this.InvokeAsync("Place", new object[] {
                        token,
                        tran}, this.PlaceOperationCompleted, userState);
        }
        
        private void OnPlaceOperationCompleted(object arg) {
            if ((this.PlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceCompleted(this, new PlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ApplyDelivery", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError ApplyDelivery(Token token, ref System.Xml.XmlNode deliveryRequire, out string code, out string balance, out string usableMargin) {
            object[] results = this.Invoke("ApplyDelivery", new object[] {
                        token,
                        deliveryRequire});
            deliveryRequire = ((System.Xml.XmlNode)(results[1]));
            code = ((string)(results[2]));
            balance = ((string)(results[3]));
            usableMargin = ((string)(results[4]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyDeliveryAsync(Token token, System.Xml.XmlNode deliveryRequire) {
            this.ApplyDeliveryAsync(token, deliveryRequire, null);
        }
        
        /// <remarks/>
        public void ApplyDeliveryAsync(Token token, System.Xml.XmlNode deliveryRequire, object userState) {
            if ((this.ApplyDeliveryOperationCompleted == null)) {
                this.ApplyDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyDeliveryOperationCompleted);
            }
            this.InvokeAsync("ApplyDelivery", new object[] {
                        token,
                        deliveryRequire}, this.ApplyDeliveryOperationCompleted, userState);
        }
        
        private void OnApplyDeliveryOperationCompleted(object arg) {
            if ((this.ApplyDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyDeliveryCompleted(this, new ApplyDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/CancelDelivery", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelDelivery(Token token, System.Guid deliveryRequestId, string title, string notifyMessage) {
            object[] results = this.Invoke("CancelDelivery", new object[] {
                        token,
                        deliveryRequestId,
                        title,
                        notifyMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelDeliveryAsync(Token token, System.Guid deliveryRequestId, string title, string notifyMessage) {
            this.CancelDeliveryAsync(token, deliveryRequestId, title, notifyMessage, null);
        }
        
        /// <remarks/>
        public void CancelDeliveryAsync(Token token, System.Guid deliveryRequestId, string title, string notifyMessage, object userState) {
            if ((this.CancelDeliveryOperationCompleted == null)) {
                this.CancelDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDeliveryOperationCompleted);
            }
            this.InvokeAsync("CancelDelivery", new object[] {
                        token,
                        deliveryRequestId,
                        title,
                        notifyMessage}, this.CancelDeliveryOperationCompleted, userState);
        }
        
        private void OnCancelDeliveryOperationCompleted(object arg) {
            if ((this.CancelDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDeliveryCompleted(this, new CancelDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyDeliveryApproved", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyDeliveryApproved(Token token, System.Guid accountId, System.Guid deliveryRequestId, System.Guid approvedId, System.DateTime approvedTime, System.DateTime deliveryTime, string title, string notifyMessage) {
            object[] results = this.Invoke("NotifyDeliveryApproved", new object[] {
                        token,
                        accountId,
                        deliveryRequestId,
                        approvedId,
                        approvedTime,
                        deliveryTime,
                        title,
                        notifyMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyDeliveryApprovedAsync(Token token, System.Guid accountId, System.Guid deliveryRequestId, System.Guid approvedId, System.DateTime approvedTime, System.DateTime deliveryTime, string title, string notifyMessage) {
            this.NotifyDeliveryApprovedAsync(token, accountId, deliveryRequestId, approvedId, approvedTime, deliveryTime, title, notifyMessage, null);
        }
        
        /// <remarks/>
        public void NotifyDeliveryApprovedAsync(Token token, System.Guid accountId, System.Guid deliveryRequestId, System.Guid approvedId, System.DateTime approvedTime, System.DateTime deliveryTime, string title, string notifyMessage, object userState) {
            if ((this.NotifyDeliveryApprovedOperationCompleted == null)) {
                this.NotifyDeliveryApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyDeliveryApprovedOperationCompleted);
            }
            this.InvokeAsync("NotifyDeliveryApproved", new object[] {
                        token,
                        accountId,
                        deliveryRequestId,
                        approvedId,
                        approvedTime,
                        deliveryTime,
                        title,
                        notifyMessage}, this.NotifyDeliveryApprovedOperationCompleted, userState);
        }
        
        private void OnNotifyDeliveryApprovedOperationCompleted(object arg) {
            if ((this.NotifyDeliveryApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyDeliveryApprovedCompleted(this, new NotifyDeliveryApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyDelivery", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyDelivery(Token token, System.Guid deliveryRequestId, System.DateTime deliveryTime, string title, string notifyMessage) {
            object[] results = this.Invoke("NotifyDelivery", new object[] {
                        token,
                        deliveryRequestId,
                        deliveryTime,
                        title,
                        notifyMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyDeliveryAsync(Token token, System.Guid deliveryRequestId, System.DateTime deliveryTime, string title, string notifyMessage) {
            this.NotifyDeliveryAsync(token, deliveryRequestId, deliveryTime, title, notifyMessage, null);
        }
        
        /// <remarks/>
        public void NotifyDeliveryAsync(Token token, System.Guid deliveryRequestId, System.DateTime deliveryTime, string title, string notifyMessage, object userState) {
            if ((this.NotifyDeliveryOperationCompleted == null)) {
                this.NotifyDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyDeliveryOperationCompleted);
            }
            this.InvokeAsync("NotifyDelivery", new object[] {
                        token,
                        deliveryRequestId,
                        deliveryTime,
                        title,
                        notifyMessage}, this.NotifyDeliveryOperationCompleted, userState);
        }
        
        private void OnNotifyDeliveryOperationCompleted(object arg) {
            if ((this.NotifyDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyDeliveryCompleted(this, new NotifyDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyDelivered", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyDelivered(Token token, System.Guid deliveryRequestId, System.Guid accountId) {
            object[] results = this.Invoke("NotifyDelivered", new object[] {
                        token,
                        deliveryRequestId,
                        accountId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyDeliveredAsync(Token token, System.Guid deliveryRequestId, System.Guid accountId) {
            this.NotifyDeliveredAsync(token, deliveryRequestId, accountId, null);
        }
        
        /// <remarks/>
        public void NotifyDeliveredAsync(Token token, System.Guid deliveryRequestId, System.Guid accountId, object userState) {
            if ((this.NotifyDeliveredOperationCompleted == null)) {
                this.NotifyDeliveredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyDeliveredOperationCompleted);
            }
            this.InvokeAsync("NotifyDelivered", new object[] {
                        token,
                        deliveryRequestId,
                        accountId}, this.NotifyDeliveredOperationCompleted, userState);
        }
        
        private void OnNotifyDeliveredOperationCompleted(object arg) {
            if ((this.NotifyDeliveredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyDeliveredCompleted(this, new NotifyDeliveredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyScrapDeposit", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyScrapDeposit(Token token, System.Xml.XmlNode scrapDeposit, string title, string notifyMessage) {
            object[] results = this.Invoke("NotifyScrapDeposit", new object[] {
                        token,
                        scrapDeposit,
                        title,
                        notifyMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyScrapDepositAsync(Token token, System.Xml.XmlNode scrapDeposit, string title, string notifyMessage) {
            this.NotifyScrapDepositAsync(token, scrapDeposit, title, notifyMessage, null);
        }
        
        /// <remarks/>
        public void NotifyScrapDepositAsync(Token token, System.Xml.XmlNode scrapDeposit, string title, string notifyMessage, object userState) {
            if ((this.NotifyScrapDepositOperationCompleted == null)) {
                this.NotifyScrapDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyScrapDepositOperationCompleted);
            }
            this.InvokeAsync("NotifyScrapDeposit", new object[] {
                        token,
                        scrapDeposit,
                        title,
                        notifyMessage}, this.NotifyScrapDepositOperationCompleted, userState);
        }
        
        private void OnNotifyScrapDepositOperationCompleted(object arg) {
            if ((this.NotifyScrapDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyScrapDepositCompleted(this, new NotifyScrapDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyScrapDepositCanceled", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyScrapDepositCanceled(Token token, System.Xml.XmlNode scrapDepositCancel) {
            object[] results = this.Invoke("NotifyScrapDepositCanceled", new object[] {
                        token,
                        scrapDepositCancel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyScrapDepositCanceledAsync(Token token, System.Xml.XmlNode scrapDepositCancel) {
            this.NotifyScrapDepositCanceledAsync(token, scrapDepositCancel, null);
        }
        
        /// <remarks/>
        public void NotifyScrapDepositCanceledAsync(Token token, System.Xml.XmlNode scrapDepositCancel, object userState) {
            if ((this.NotifyScrapDepositCanceledOperationCompleted == null)) {
                this.NotifyScrapDepositCanceledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyScrapDepositCanceledOperationCompleted);
            }
            this.InvokeAsync("NotifyScrapDepositCanceled", new object[] {
                        token,
                        scrapDepositCancel}, this.NotifyScrapDepositCanceledOperationCompleted, userState);
        }
        
        private void OnNotifyScrapDepositCanceledOperationCompleted(object arg) {
            if ((this.NotifyScrapDepositCanceledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyScrapDepositCanceledCompleted(this, new NotifyScrapDepositCanceledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Cancel", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Cancel(Token token, System.Guid tranID, CancelReason cancelReason) {
            object[] results = this.Invoke("Cancel", new object[] {
                        token,
                        tranID,
                        cancelReason});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void CancelAsync(Token token, System.Guid tranID, CancelReason cancelReason) {
            this.CancelAsync(token, tranID, cancelReason, null);
        }
        
        /// <remarks/>
        public void CancelAsync(Token token, System.Guid tranID, CancelReason cancelReason, object userState) {
            if ((this.CancelOperationCompleted == null)) {
                this.CancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOperationCompleted);
            }
            this.InvokeAsync("Cancel", new object[] {
                        token,
                        tranID,
                        cancelReason}, this.CancelOperationCompleted, userState);
        }
        
        private void OnCancelOperationCompleted(object arg) {
            if ((this.CancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCompleted(this, new CancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Email", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Email(Token token, string typeDesc, System.Guid transactionID, string fromEmail, string toEmails, string subject, string body) {
            this.Invoke("Email", new object[] {
                        token,
                        typeDesc,
                        transactionID,
                        fromEmail,
                        toEmails,
                        subject,
                        body});
        }
        
        /// <remarks/>
        public void EmailAsync(Token token, string typeDesc, System.Guid transactionID, string fromEmail, string toEmails, string subject, string body) {
            this.EmailAsync(token, typeDesc, transactionID, fromEmail, toEmails, subject, body, null);
        }
        
        /// <remarks/>
        public void EmailAsync(Token token, string typeDesc, System.Guid transactionID, string fromEmail, string toEmails, string subject, string body, object userState) {
            if ((this.EmailOperationCompleted == null)) {
                this.EmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmailOperationCompleted);
            }
            this.InvokeAsync("Email", new object[] {
                        token,
                        typeDesc,
                        transactionID,
                        fromEmail,
                        toEmails,
                        subject,
                        body}, this.EmailOperationCompleted, userState);
        }
        
        private void OnEmailOperationCompleted(object arg) {
            if ((this.EmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/RejectCancelLmtOrder", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError RejectCancelLmtOrder(Token token, System.Guid tranID, System.Guid accountID) {
            object[] results = this.Invoke("RejectCancelLmtOrder", new object[] {
                        token,
                        tranID,
                        accountID});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void RejectCancelLmtOrderAsync(Token token, System.Guid tranID, System.Guid accountID) {
            this.RejectCancelLmtOrderAsync(token, tranID, accountID, null);
        }
        
        /// <remarks/>
        public void RejectCancelLmtOrderAsync(Token token, System.Guid tranID, System.Guid accountID, object userState) {
            if ((this.RejectCancelLmtOrderOperationCompleted == null)) {
                this.RejectCancelLmtOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectCancelLmtOrderOperationCompleted);
            }
            this.InvokeAsync("RejectCancelLmtOrder", new object[] {
                        token,
                        tranID,
                        accountID}, this.RejectCancelLmtOrderOperationCompleted, userState);
        }
        
        private void OnRejectCancelLmtOrderOperationCompleted(object arg) {
            if ((this.RejectCancelLmtOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectCancelLmtOrderCompleted(this, new RejectCancelLmtOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Execute", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Execute(Token token, System.Guid tranID, string buyPrice, string sellPrice, string lot, System.Guid executedOrderID, out System.Xml.XmlNode xmlTran) {
            object[] results = this.Invoke("Execute", new object[] {
                        token,
                        tranID,
                        buyPrice,
                        sellPrice,
                        lot,
                        executedOrderID});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteAsync(Token token, System.Guid tranID, string buyPrice, string sellPrice, string lot, System.Guid executedOrderID) {
            this.ExecuteAsync(token, tranID, buyPrice, sellPrice, lot, executedOrderID, null);
        }
        
        /// <remarks/>
        public void ExecuteAsync(Token token, System.Guid tranID, string buyPrice, string sellPrice, string lot, System.Guid executedOrderID, object userState) {
            if ((this.ExecuteOperationCompleted == null)) {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        token,
                        tranID,
                        buyPrice,
                        sellPrice,
                        lot,
                        executedOrderID}, this.ExecuteOperationCompleted, userState);
        }
        
        private void OnExecuteOperationCompleted(object arg) {
            if ((this.ExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/MultipleClose", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError MultipleClose(Token token, System.Guid[] orderIds, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount) {
            object[] results = this.Invoke("MultipleClose", new object[] {
                        token,
                        orderIds});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void MultipleCloseAsync(Token token, System.Guid[] orderIds) {
            this.MultipleCloseAsync(token, orderIds, null);
        }
        
        /// <remarks/>
        public void MultipleCloseAsync(Token token, System.Guid[] orderIds, object userState) {
            if ((this.MultipleCloseOperationCompleted == null)) {
                this.MultipleCloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultipleCloseOperationCompleted);
            }
            this.InvokeAsync("MultipleClose", new object[] {
                        token,
                        orderIds}, this.MultipleCloseOperationCompleted, userState);
        }
        
        private void OnMultipleCloseOperationCompleted(object arg) {
            if ((this.MultipleCloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultipleCloseCompleted(this, new MultipleCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Assign", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Assign(Token token, ref System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlInstrument) {
            object[] results = this.Invoke("Assign", new object[] {
                        token,
                        xmlTran});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlInstrument = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAsync(Token token, System.Xml.XmlNode xmlTran) {
            this.AssignAsync(token, xmlTran, null);
        }
        
        /// <remarks/>
        public void AssignAsync(Token token, System.Xml.XmlNode xmlTran, object userState) {
            if ((this.AssignOperationCompleted == null)) {
                this.AssignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignOperationCompleted);
            }
            this.InvokeAsync("Assign", new object[] {
                        token,
                        xmlTran}, this.AssignOperationCompleted, userState);
        }
        
        private void OnAssignOperationCompleted(object arg) {
            if ((this.AssignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignCompleted(this, new AssignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Book", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Book(Token token, ref System.Xml.XmlNode xmlTran, bool preserveCalculation, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlAffectedOrders) {
            object[] results = this.Invoke("Book", new object[] {
                        token,
                        xmlTran,
                        preserveCalculation});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void BookAsync(Token token, System.Xml.XmlNode xmlTran, bool preserveCalculation) {
            this.BookAsync(token, xmlTran, preserveCalculation, null);
        }
        
        /// <remarks/>
        public void BookAsync(Token token, System.Xml.XmlNode xmlTran, bool preserveCalculation, object userState) {
            if ((this.BookOperationCompleted == null)) {
                this.BookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookOperationCompleted);
            }
            this.InvokeAsync("Book", new object[] {
                        token,
                        xmlTran,
                        preserveCalculation}, this.BookOperationCompleted, userState);
        }
        
        private void OnBookOperationCompleted(object arg) {
            if ((this.BookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookCompleted(this, new BookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Delete", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Delete(Token token, bool notifyByEmail, bool isPayForInstalmentDebitInterest, System.Guid orderID, out System.Xml.XmlNode affectedOrders, out System.Xml.XmlNode xmlAccount) {
            object[] results = this.Invoke("Delete", new object[] {
                        token,
                        notifyByEmail,
                        isPayForInstalmentDebitInterest,
                        orderID});
            affectedOrders = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(Token token, bool notifyByEmail, bool isPayForInstalmentDebitInterest, System.Guid orderID) {
            this.DeleteAsync(token, notifyByEmail, isPayForInstalmentDebitInterest, orderID, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(Token token, bool notifyByEmail, bool isPayForInstalmentDebitInterest, System.Guid orderID, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        token,
                        notifyByEmail,
                        isPayForInstalmentDebitInterest,
                        orderID}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ResetHit", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetHit(Token token, System.Guid[] orderIDs) {
            this.Invoke("ResetHit", new object[] {
                        token,
                        orderIDs});
        }
        
        /// <remarks/>
        public void ResetHitAsync(Token token, System.Guid[] orderIDs) {
            this.ResetHitAsync(token, orderIDs, null);
        }
        
        /// <remarks/>
        public void ResetHitAsync(Token token, System.Guid[] orderIDs, object userState) {
            if ((this.ResetHitOperationCompleted == null)) {
                this.ResetHitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetHitOperationCompleted);
            }
            this.InvokeAsync("ResetHit", new object[] {
                        token,
                        orderIDs}, this.ResetHitOperationCompleted, userState);
        }
        
        private void OnResetHitOperationCompleted(object arg) {
            if ((this.ResetHitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetHitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ResetAlertLevel", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResetAlertLevel(Token token, System.Guid[] accountIDs) {
            object[] results = this.Invoke("ResetAlertLevel", new object[] {
                        token,
                        accountIDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResetAlertLevelAsync(Token token, System.Guid[] accountIDs) {
            this.ResetAlertLevelAsync(token, accountIDs, null);
        }
        
        /// <remarks/>
        public void ResetAlertLevelAsync(Token token, System.Guid[] accountIDs, object userState) {
            if ((this.ResetAlertLevelOperationCompleted == null)) {
                this.ResetAlertLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetAlertLevelOperationCompleted);
            }
            this.InvokeAsync("ResetAlertLevel", new object[] {
                        token,
                        accountIDs}, this.ResetAlertLevelOperationCompleted, userState);
        }
        
        private void OnResetAlertLevelOperationCompleted(object arg) {
            if ((this.ResetAlertLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetAlertLevelCompleted(this, new ResetAlertLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccounts", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts(Token token, System.Guid[] accountIDs, bool includeTransactions) {
            object[] results = this.Invoke("GetAccounts", new object[] {
                        token,
                        accountIDs,
                        includeTransactions});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsAsync(Token token, System.Guid[] accountIDs, bool includeTransactions) {
            this.GetAccountsAsync(token, accountIDs, includeTransactions, null);
        }
        
        /// <remarks/>
        public void GetAccountsAsync(Token token, System.Guid[] accountIDs, bool includeTransactions, object userState) {
            if ((this.GetAccountsOperationCompleted == null)) {
                this.GetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAccounts", new object[] {
                        token,
                        accountIDs,
                        includeTransactions}, this.GetAccountsOperationCompleted, userState);
        }
        
        private void OnGetAccountsOperationCompleted(object arg) {
            if ((this.GetAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccounts5", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts5(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool includeTransactions) {
            object[] results = this.Invoke("GetAccounts5", new object[] {
                        token,
                        accountIDs,
                        instrumentIDs,
                        includeTransactions});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccounts5Async(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool includeTransactions) {
            this.GetAccounts5Async(token, accountIDs, instrumentIDs, includeTransactions, null);
        }
        
        /// <remarks/>
        public void GetAccounts5Async(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool includeTransactions, object userState) {
            if ((this.GetAccounts5OperationCompleted == null)) {
                this.GetAccounts5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccounts5OperationCompleted);
            }
            this.InvokeAsync("GetAccounts5", new object[] {
                        token,
                        accountIDs,
                        instrumentIDs,
                        includeTransactions}, this.GetAccounts5OperationCompleted, userState);
        }
        
        private void OnGetAccounts5OperationCompleted(object arg) {
            if ((this.GetAccounts5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccounts5Completed(this, new GetAccounts5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetOpenInterestInstrumentSummary", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOpenInterestInstrumentSummary(Token token, bool isGroupByOriginCode, string[] blotterCodeSelecteds) {
            object[] results = this.Invoke("GetOpenInterestInstrumentSummary", new object[] {
                        token,
                        isGroupByOriginCode,
                        blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenInterestInstrumentSummaryAsync(Token token, bool isGroupByOriginCode, string[] blotterCodeSelecteds) {
            this.GetOpenInterestInstrumentSummaryAsync(token, isGroupByOriginCode, blotterCodeSelecteds, null);
        }
        
        /// <remarks/>
        public void GetOpenInterestInstrumentSummaryAsync(Token token, bool isGroupByOriginCode, string[] blotterCodeSelecteds, object userState) {
            if ((this.GetOpenInterestInstrumentSummaryOperationCompleted == null)) {
                this.GetOpenInterestInstrumentSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenInterestInstrumentSummaryOperationCompleted);
            }
            this.InvokeAsync("GetOpenInterestInstrumentSummary", new object[] {
                        token,
                        isGroupByOriginCode,
                        blotterCodeSelecteds}, this.GetOpenInterestInstrumentSummaryOperationCompleted, userState);
        }
        
        private void OnGetOpenInterestInstrumentSummaryOperationCompleted(object arg) {
            if ((this.GetOpenInterestInstrumentSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenInterestInstrumentSummaryCompleted(this, new GetOpenInterestInstrumentSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetOpenInterestSummary", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOpenInterestSummary(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds) {
            object[] results = this.Invoke("GetOpenInterestSummary", new object[] {
                        token,
                        accountIDs,
                        instrumentIDs,
                        blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenInterestSummaryAsync(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds) {
            this.GetOpenInterestSummaryAsync(token, accountIDs, instrumentIDs, blotterCodeSelecteds, null);
        }
        
        /// <remarks/>
        public void GetOpenInterestSummaryAsync(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds, object userState) {
            if ((this.GetOpenInterestSummaryOperationCompleted == null)) {
                this.GetOpenInterestSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenInterestSummaryOperationCompleted);
            }
            this.InvokeAsync("GetOpenInterestSummary", new object[] {
                        token,
                        accountIDs,
                        instrumentIDs,
                        blotterCodeSelecteds}, this.GetOpenInterestSummaryOperationCompleted, userState);
        }
        
        private void OnGetOpenInterestSummaryOperationCompleted(object arg) {
            if ((this.GetOpenInterestSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenInterestSummaryCompleted(this, new GetOpenInterestSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetOpenInterestSummaryOrderList", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOpenInterestSummaryOrderList(Token token, System.Guid accountId, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds) {
            object[] results = this.Invoke("GetOpenInterestSummaryOrderList", new object[] {
                        token,
                        accountId,
                        instrumentIDs,
                        blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenInterestSummaryOrderListAsync(Token token, System.Guid accountId, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds) {
            this.GetOpenInterestSummaryOrderListAsync(token, accountId, instrumentIDs, blotterCodeSelecteds, null);
        }
        
        /// <remarks/>
        public void GetOpenInterestSummaryOrderListAsync(Token token, System.Guid accountId, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds, object userState) {
            if ((this.GetOpenInterestSummaryOrderListOperationCompleted == null)) {
                this.GetOpenInterestSummaryOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenInterestSummaryOrderListOperationCompleted);
            }
            this.InvokeAsync("GetOpenInterestSummaryOrderList", new object[] {
                        token,
                        accountId,
                        instrumentIDs,
                        blotterCodeSelecteds}, this.GetOpenInterestSummaryOrderListOperationCompleted, userState);
        }
        
        private void OnGetOpenInterestSummaryOrderListOperationCompleted(object arg) {
            if ((this.GetOpenInterestSummaryOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenInterestSummaryOrderListCompleted(this, new GetOpenInterestSummaryOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetGroupNetPosition", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupNetPosition(Token token, string permissionName, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool showActualQuantity, string[] blotterCodeSelecteds) {
            object[] results = this.Invoke("GetGroupNetPosition", new object[] {
                        token,
                        permissionName,
                        accountIDs,
                        instrumentIDs,
                        showActualQuantity,
                        blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupNetPositionAsync(Token token, string permissionName, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool showActualQuantity, string[] blotterCodeSelecteds) {
            this.GetGroupNetPositionAsync(token, permissionName, accountIDs, instrumentIDs, showActualQuantity, blotterCodeSelecteds, null);
        }
        
        /// <remarks/>
        public void GetGroupNetPositionAsync(Token token, string permissionName, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool showActualQuantity, string[] blotterCodeSelecteds, object userState) {
            if ((this.GetGroupNetPositionOperationCompleted == null)) {
                this.GetGroupNetPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupNetPositionOperationCompleted);
            }
            this.InvokeAsync("GetGroupNetPosition", new object[] {
                        token,
                        permissionName,
                        accountIDs,
                        instrumentIDs,
                        showActualQuantity,
                        blotterCodeSelecteds}, this.GetGroupNetPositionOperationCompleted, userState);
        }
        
        private void OnGetGroupNetPositionOperationCompleted(object arg) {
            if ((this.GetGroupNetPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupNetPositionCompleted(this, new GetGroupNetPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetGroupNetPositionInstrument", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupNetPositionInstrument(Token token, string permissionName, System.Guid accountId, System.Guid instrumentId, bool showActualQuantity, string[] blotterCodeSelecteds) {
            object[] results = this.Invoke("GetGroupNetPositionInstrument", new object[] {
                        token,
                        permissionName,
                        accountId,
                        instrumentId,
                        showActualQuantity,
                        blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupNetPositionInstrumentAsync(Token token, string permissionName, System.Guid accountId, System.Guid instrumentId, bool showActualQuantity, string[] blotterCodeSelecteds) {
            this.GetGroupNetPositionInstrumentAsync(token, permissionName, accountId, instrumentId, showActualQuantity, blotterCodeSelecteds, null);
        }
        
        /// <remarks/>
        public void GetGroupNetPositionInstrumentAsync(Token token, string permissionName, System.Guid accountId, System.Guid instrumentId, bool showActualQuantity, string[] blotterCodeSelecteds, object userState) {
            if ((this.GetGroupNetPositionInstrumentOperationCompleted == null)) {
                this.GetGroupNetPositionInstrumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupNetPositionInstrumentOperationCompleted);
            }
            this.InvokeAsync("GetGroupNetPositionInstrument", new object[] {
                        token,
                        permissionName,
                        accountId,
                        instrumentId,
                        showActualQuantity,
                        blotterCodeSelecteds}, this.GetGroupNetPositionInstrumentOperationCompleted, userState);
        }
        
        private void OnGetGroupNetPositionInstrumentOperationCompleted(object arg) {
            if ((this.GetGroupNetPositionInstrumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupNetPositionInstrumentCompleted(this, new GetGroupNetPositionInstrumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccountsForCut", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccountsForCut(Token token, System.Guid[] accountIDs, bool includeTransactions) {
            object[] results = this.Invoke("GetAccountsForCut", new object[] {
                        token,
                        accountIDs,
                        includeTransactions});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsForCutAsync(Token token, System.Guid[] accountIDs, bool includeTransactions) {
            this.GetAccountsForCutAsync(token, accountIDs, includeTransactions, null);
        }
        
        /// <remarks/>
        public void GetAccountsForCutAsync(Token token, System.Guid[] accountIDs, bool includeTransactions, object userState) {
            if ((this.GetAccountsForCutOperationCompleted == null)) {
                this.GetAccountsForCutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsForCutOperationCompleted);
            }
            this.InvokeAsync("GetAccountsForCut", new object[] {
                        token,
                        accountIDs,
                        includeTransactions}, this.GetAccountsForCutOperationCompleted, userState);
        }
        
        private void OnGetAccountsForCutOperationCompleted(object arg) {
            if ((this.GetAccountsForCutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsForCutCompleted(this, new GetAccountsForCutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccountsForInit", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccountsForInit(System.Guid[] accountIDs) {
            object[] results = this.Invoke("GetAccountsForInit", new object[] {
                        accountIDs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsForInitAsync(System.Guid[] accountIDs) {
            this.GetAccountsForInitAsync(accountIDs, null);
        }
        
        /// <remarks/>
        public void GetAccountsForInitAsync(System.Guid[] accountIDs, object userState) {
            if ((this.GetAccountsForInitOperationCompleted == null)) {
                this.GetAccountsForInitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsForInitOperationCompleted);
            }
            this.InvokeAsync("GetAccountsForInit", new object[] {
                        accountIDs}, this.GetAccountsForInitOperationCompleted, userState);
        }
        
        private void OnGetAccountsForInitOperationCompleted(object arg) {
            if ((this.GetAccountsForInitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsForInitCompleted(this, new GetAccountsForInitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetOrdersForGetAutoPrice", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOrdersForGetAutoPrice(System.Guid[] orderIDs) {
            object[] results = this.Invoke("GetOrdersForGetAutoPrice", new object[] {
                        orderIDs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersForGetAutoPriceAsync(System.Guid[] orderIDs) {
            this.GetOrdersForGetAutoPriceAsync(orderIDs, null);
        }
        
        /// <remarks/>
        public void GetOrdersForGetAutoPriceAsync(System.Guid[] orderIDs, object userState) {
            if ((this.GetOrdersForGetAutoPriceOperationCompleted == null)) {
                this.GetOrdersForGetAutoPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersForGetAutoPriceOperationCompleted);
            }
            this.InvokeAsync("GetOrdersForGetAutoPrice", new object[] {
                        orderIDs}, this.GetOrdersForGetAutoPriceOperationCompleted, userState);
        }
        
        private void OnGetOrdersForGetAutoPriceOperationCompleted(object arg) {
            if ((this.GetOrdersForGetAutoPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersForGetAutoPriceCompleted(this, new GetOrdersForGetAutoPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Update", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(Token token, [System.Xml.Serialization.XmlElementAttribute("update")] System.Xml.XmlNode update1) {
            object[] results = this.Invoke("Update", new object[] {
                        token,
                        update1});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(Token token, System.Xml.XmlNode update1) {
            this.UpdateAsync(token, update1, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(Token token, System.Xml.XmlNode update1, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        token,
                        update1}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/RedoLimitOrder", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RedoLimitOrder(Token token, System.Xml.XmlNode orderIds, out TransactionError returnValue) {
            object[] results = this.Invoke("RedoLimitOrder", new object[] {
                        token,
                        orderIds});
            returnValue = ((TransactionError)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RedoLimitOrderAsync(Token token, System.Xml.XmlNode orderIds) {
            this.RedoLimitOrderAsync(token, orderIds, null);
        }
        
        /// <remarks/>
        public void RedoLimitOrderAsync(Token token, System.Xml.XmlNode orderIds, object userState) {
            if ((this.RedoLimitOrderOperationCompleted == null)) {
                this.RedoLimitOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRedoLimitOrderOperationCompleted);
            }
            this.InvokeAsync("RedoLimitOrder", new object[] {
                        token,
                        orderIds}, this.RedoLimitOrderOperationCompleted, userState);
        }
        
        private void OnRedoLimitOrderOperationCompleted(object arg) {
            if ((this.RedoLimitOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RedoLimitOrderCompleted(this, new RedoLimitOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateFromTNU", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFromTNU(System.Xml.XmlNode[] updates) {
            object[] results = this.Invoke("UpdateFromTNU", new object[] {
                        updates});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFromTNUAsync(System.Xml.XmlNode[] updates) {
            this.UpdateFromTNUAsync(updates, null);
        }
        
        /// <remarks/>
        public void UpdateFromTNUAsync(System.Xml.XmlNode[] updates, object userState) {
            if ((this.UpdateFromTNUOperationCompleted == null)) {
                this.UpdateFromTNUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFromTNUOperationCompleted);
            }
            this.InvokeAsync("UpdateFromTNU", new object[] {
                        updates}, this.UpdateFromTNUOperationCompleted, userState);
        }
        
        private void OnUpdateFromTNUOperationCompleted(object arg) {
            if ((this.UpdateFromTNUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFromTNUCompleted(this, new UpdateFromTNUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Update1", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update1(string sXml) {
            object[] results = this.Invoke("Update1", new object[] {
                        sXml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Update1Async(string sXml) {
            this.Update1Async(sXml, null);
        }
        
        /// <remarks/>
        public void Update1Async(string sXml, object userState) {
            if ((this.Update1OperationCompleted == null)) {
                this.Update1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate1OperationCompleted);
            }
            this.InvokeAsync("Update1", new object[] {
                        sXml}, this.Update1OperationCompleted, userState);
        }
        
        private void OnUpdate1OperationCompleted(object arg) {
            if ((this.Update1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update1Completed(this, new Update1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetActiveSource", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetActiveSource(Token token, string quotationSource) {
            object[] results = this.Invoke("SetActiveSource", new object[] {
                        token,
                        quotationSource});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetActiveSourceAsync(Token token, string quotationSource) {
            this.SetActiveSourceAsync(token, quotationSource, null);
        }
        
        /// <remarks/>
        public void SetActiveSourceAsync(Token token, string quotationSource, object userState) {
            if ((this.SetActiveSourceOperationCompleted == null)) {
                this.SetActiveSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActiveSourceOperationCompleted);
            }
            this.InvokeAsync("SetActiveSource", new object[] {
                        token,
                        quotationSource}, this.SetActiveSourceOperationCompleted, userState);
        }
        
        private void OnSetActiveSourceOperationCompleted(object arg) {
            if ((this.SetActiveSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetActiveSourceCompleted(this, new SetActiveSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetActiveSourceInstrument", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetActiveSourceInstrument(Token token, System.Xml.XmlNode sourceInstrumentNodes) {
            object[] results = this.Invoke("SetActiveSourceInstrument", new object[] {
                        token,
                        sourceInstrumentNodes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetActiveSourceInstrumentAsync(Token token, System.Xml.XmlNode sourceInstrumentNodes) {
            this.SetActiveSourceInstrumentAsync(token, sourceInstrumentNodes, null);
        }
        
        /// <remarks/>
        public void SetActiveSourceInstrumentAsync(Token token, System.Xml.XmlNode sourceInstrumentNodes, object userState) {
            if ((this.SetActiveSourceInstrumentOperationCompleted == null)) {
                this.SetActiveSourceInstrumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActiveSourceInstrumentOperationCompleted);
            }
            this.InvokeAsync("SetActiveSourceInstrument", new object[] {
                        token,
                        sourceInstrumentNodes}, this.SetActiveSourceInstrumentOperationCompleted, userState);
        }
        
        private void OnSetActiveSourceInstrumentOperationCompleted(object arg) {
            if ((this.SetActiveSourceInstrumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetActiveSourceInstrumentCompleted(this, new SetActiveSourceInstrumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/VerifyTransaction", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid[] VerifyTransaction(Token token, System.Guid[] transactionIDs) {
            object[] results = this.Invoke("VerifyTransaction", new object[] {
                        token,
                        transactionIDs});
            return ((System.Guid[])(results[0]));
        }
        
        /// <remarks/>
        public void VerifyTransactionAsync(Token token, System.Guid[] transactionIDs) {
            this.VerifyTransactionAsync(token, transactionIDs, null);
        }
        
        /// <remarks/>
        public void VerifyTransactionAsync(Token token, System.Guid[] transactionIDs, object userState) {
            if ((this.VerifyTransactionOperationCompleted == null)) {
                this.VerifyTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyTransactionOperationCompleted);
            }
            this.InvokeAsync("VerifyTransaction", new object[] {
                        token,
                        transactionIDs}, this.VerifyTransactionOperationCompleted, userState);
        }
        
        private void OnVerifyTransactionOperationCompleted(object arg) {
            if ((this.VerifyTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyTransactionCompleted(this, new VerifyTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccounts2", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccounts2(Token token) {
            object[] results = this.Invoke("GetAccounts2", new object[] {
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccounts2Async(Token token) {
            this.GetAccounts2Async(token, null);
        }
        
        /// <remarks/>
        public void GetAccounts2Async(Token token, object userState) {
            if ((this.GetAccounts2OperationCompleted == null)) {
                this.GetAccounts2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccounts2OperationCompleted);
            }
            this.InvokeAsync("GetAccounts2", new object[] {
                        token}, this.GetAccounts2OperationCompleted, userState);
        }
        
        private void OnGetAccounts2OperationCompleted(object arg) {
            if ((this.GetAccounts2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccounts2Completed(this, new GetAccounts2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetOrders", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrders(Token token, System.Xml.XmlNode xmlAccounts, string tradeDay) {
            object[] results = this.Invoke("GetOrders", new object[] {
                        token,
                        xmlAccounts,
                        tradeDay});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersAsync(Token token, System.Xml.XmlNode xmlAccounts, string tradeDay) {
            this.GetOrdersAsync(token, xmlAccounts, tradeDay, null);
        }
        
        /// <remarks/>
        public void GetOrdersAsync(Token token, System.Xml.XmlNode xmlAccounts, string tradeDay, object userState) {
            if ((this.GetOrdersOperationCompleted == null)) {
                this.GetOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersOperationCompleted);
            }
            this.InvokeAsync("GetOrders", new object[] {
                        token,
                        xmlAccounts,
                        tradeDay}, this.GetOrdersOperationCompleted, userState);
        }
        
        private void OnGetOrdersOperationCompleted(object arg) {
            if ((this.GetOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersCompleted(this, new GetOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/AcceptPlace", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError AcceptPlace(Token token, System.Guid tranID) {
            object[] results = this.Invoke("AcceptPlace", new object[] {
                        token,
                        tranID});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPlaceAsync(Token token, System.Guid tranID) {
            this.AcceptPlaceAsync(token, tranID, null);
        }
        
        /// <remarks/>
        public void AcceptPlaceAsync(Token token, System.Guid tranID, object userState) {
            if ((this.AcceptPlaceOperationCompleted == null)) {
                this.AcceptPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPlaceOperationCompleted);
            }
            this.InvokeAsync("AcceptPlace", new object[] {
                        token,
                        tranID}, this.AcceptPlaceOperationCompleted, userState);
        }
        
        private void OnAcceptPlaceOperationCompleted(object arg) {
            if ((this.AcceptPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPlaceCompleted(this, new AcceptPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAcountInfo", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAcountInfo(Token token, System.Guid tranID) {
            object[] results = this.Invoke("GetAcountInfo", new object[] {
                        token,
                        tranID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAcountInfoAsync(Token token, System.Guid tranID) {
            this.GetAcountInfoAsync(token, tranID, null);
        }
        
        /// <remarks/>
        public void GetAcountInfoAsync(Token token, System.Guid tranID, object userState) {
            if ((this.GetAcountInfoOperationCompleted == null)) {
                this.GetAcountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAcountInfoOperationCompleted);
            }
            this.InvokeAsync("GetAcountInfo", new object[] {
                        token,
                        tranID}, this.GetAcountInfoOperationCompleted, userState);
        }
        
        private void OnGetAcountInfoOperationCompleted(object arg) {
            if ((this.GetAcountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAcountInfoCompleted(this, new GetAcountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetMemoryBalanceNecessaryEquityExcludeAlerted" +
            "", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMemoryBalanceNecessaryEquityExcludeAlerted(Token token) {
            object[] results = this.Invoke("GetMemoryBalanceNecessaryEquityExcludeAlerted", new object[] {
                        token});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemoryBalanceNecessaryEquityExcludeAlertedAsync(Token token) {
            this.GetMemoryBalanceNecessaryEquityExcludeAlertedAsync(token, null);
        }
        
        /// <remarks/>
        public void GetMemoryBalanceNecessaryEquityExcludeAlertedAsync(Token token, object userState) {
            if ((this.GetMemoryBalanceNecessaryEquityExcludeAlertedOperationCompleted == null)) {
                this.GetMemoryBalanceNecessaryEquityExcludeAlertedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemoryBalanceNecessaryEquityExcludeAlertedOperationCompleted);
            }
            this.InvokeAsync("GetMemoryBalanceNecessaryEquityExcludeAlerted", new object[] {
                        token}, this.GetMemoryBalanceNecessaryEquityExcludeAlertedOperationCompleted, userState);
        }
        
        private void OnGetMemoryBalanceNecessaryEquityExcludeAlertedOperationCompleted(object arg) {
            if ((this.GetMemoryBalanceNecessaryEquityExcludeAlertedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemoryBalanceNecessaryEquityExcludeAlertedCompleted(this, new GetMemoryBalanceNecessaryEquityExcludeAlertedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetNews", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetNews(Token token, News[] newsCollection) {
            object[] results = this.Invoke("SetNews", new object[] {
                        token,
                        newsCollection});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetNewsAsync(Token token, News[] newsCollection) {
            this.SetNewsAsync(token, newsCollection, null);
        }
        
        /// <remarks/>
        public void SetNewsAsync(Token token, News[] newsCollection, object userState) {
            if ((this.SetNewsOperationCompleted == null)) {
                this.SetNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetNewsOperationCompleted);
            }
            this.InvokeAsync("SetNews", new object[] {
                        token,
                        newsCollection}, this.SetNewsOperationCompleted, userState);
        }
        
        private void OnSetNewsOperationCompleted(object arg) {
            if ((this.SetNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetNewsCompleted(this, new SetNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateHighLow", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("batchProcessId")]
        public int UpdateHighLow(Token token, string ip, System.Guid instrumentId, bool isOriginHiLo, string newInput, bool isUpdateHigh, out string instrumentCode, out bool highBid, out bool lowBid, out System.DateTime updateTime, out int returnValue, out string errorMessage) {
            object[] results = this.Invoke("UpdateHighLow", new object[] {
                        token,
                        ip,
                        instrumentId,
                        isOriginHiLo,
                        newInput,
                        isUpdateHigh});
            instrumentCode = ((string)(results[1]));
            highBid = ((bool)(results[2]));
            lowBid = ((bool)(results[3]));
            updateTime = ((System.DateTime)(results[4]));
            returnValue = ((int)(results[5]));
            errorMessage = ((string)(results[6]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHighLowAsync(Token token, string ip, System.Guid instrumentId, bool isOriginHiLo, string newInput, bool isUpdateHigh) {
            this.UpdateHighLowAsync(token, ip, instrumentId, isOriginHiLo, newInput, isUpdateHigh, null);
        }
        
        /// <remarks/>
        public void UpdateHighLowAsync(Token token, string ip, System.Guid instrumentId, bool isOriginHiLo, string newInput, bool isUpdateHigh, object userState) {
            if ((this.UpdateHighLowOperationCompleted == null)) {
                this.UpdateHighLowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHighLowOperationCompleted);
            }
            this.InvokeAsync("UpdateHighLow", new object[] {
                        token,
                        ip,
                        instrumentId,
                        isOriginHiLo,
                        newInput,
                        isUpdateHigh}, this.UpdateHighLowOperationCompleted, userState);
        }
        
        private void OnUpdateHighLowOperationCompleted(object arg) {
            if ((this.UpdateHighLowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHighLowCompleted(this, new UpdateHighLowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/RestoreHighLow", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("instrumentId")]
        public System.Guid RestoreHighLow(Token token, string ip, int batchProcessId, out string instrumentCode, out string newInput, out bool isUpdateHigh, out bool highBid, out bool lowBid, out int returnValue, out string errorMessage) {
            object[] results = this.Invoke("RestoreHighLow", new object[] {
                        token,
                        ip,
                        batchProcessId});
            instrumentCode = ((string)(results[1]));
            newInput = ((string)(results[2]));
            isUpdateHigh = ((bool)(results[3]));
            highBid = ((bool)(results[4]));
            lowBid = ((bool)(results[5]));
            returnValue = ((int)(results[6]));
            errorMessage = ((string)(results[7]));
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreHighLowAsync(Token token, string ip, int batchProcessId) {
            this.RestoreHighLowAsync(token, ip, batchProcessId, null);
        }
        
        /// <remarks/>
        public void RestoreHighLowAsync(Token token, string ip, int batchProcessId, object userState) {
            if ((this.RestoreHighLowOperationCompleted == null)) {
                this.RestoreHighLowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreHighLowOperationCompleted);
            }
            this.InvokeAsync("RestoreHighLow", new object[] {
                        token,
                        ip,
                        batchProcessId}, this.RestoreHighLowOperationCompleted, userState);
        }
        
        private void OnRestoreHighLowOperationCompleted(object arg) {
            if ((this.RestoreHighLowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreHighLowCompleted(this, new RestoreHighLowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/FixOverridedQuotationHistory", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FixOverridedQuotationHistory(Token token, string quotation, bool needApplyAutoAdjustPoints) {
            object[] results = this.Invoke("FixOverridedQuotationHistory", new object[] {
                        token,
                        quotation,
                        needApplyAutoAdjustPoints});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FixOverridedQuotationHistoryAsync(Token token, string quotation, bool needApplyAutoAdjustPoints) {
            this.FixOverridedQuotationHistoryAsync(token, quotation, needApplyAutoAdjustPoints, null);
        }
        
        /// <remarks/>
        public void FixOverridedQuotationHistoryAsync(Token token, string quotation, bool needApplyAutoAdjustPoints, object userState) {
            if ((this.FixOverridedQuotationHistoryOperationCompleted == null)) {
                this.FixOverridedQuotationHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFixOverridedQuotationHistoryOperationCompleted);
            }
            this.InvokeAsync("FixOverridedQuotationHistory", new object[] {
                        token,
                        quotation,
                        needApplyAutoAdjustPoints}, this.FixOverridedQuotationHistoryOperationCompleted, userState);
        }
        
        private void OnFixOverridedQuotationHistoryOperationCompleted(object arg) {
            if ((this.FixOverridedQuotationHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FixOverridedQuotationHistoryCompleted(this, new FixOverridedQuotationHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetHistoryQuotation", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetHistoryQuotation(Token token, System.DateTime tradeDay, string quotation, bool needApplyAutoAdjustPoints) {
            object[] results = this.Invoke("SetHistoryQuotation", new object[] {
                        token,
                        tradeDay,
                        quotation,
                        needApplyAutoAdjustPoints});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetHistoryQuotationAsync(Token token, System.DateTime tradeDay, string quotation, bool needApplyAutoAdjustPoints) {
            this.SetHistoryQuotationAsync(token, tradeDay, quotation, needApplyAutoAdjustPoints, null);
        }
        
        /// <remarks/>
        public void SetHistoryQuotationAsync(Token token, System.DateTime tradeDay, string quotation, bool needApplyAutoAdjustPoints, object userState) {
            if ((this.SetHistoryQuotationOperationCompleted == null)) {
                this.SetHistoryQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetHistoryQuotationOperationCompleted);
            }
            this.InvokeAsync("SetHistoryQuotation", new object[] {
                        token,
                        tradeDay,
                        quotation,
                        needApplyAutoAdjustPoints}, this.SetHistoryQuotationOperationCompleted, userState);
        }
        
        private void OnSetHistoryQuotationOperationCompleted(object arg) {
            if ((this.SetHistoryQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetHistoryQuotationCompleted(this, new SetHistoryQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateOverridedQuotationHighLow", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOverridedQuotationHighLow(Token token, System.Guid instrumentID, string quotation) {
            object[] results = this.Invoke("UpdateOverridedQuotationHighLow", new object[] {
                        token,
                        instrumentID,
                        quotation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOverridedQuotationHighLowAsync(Token token, System.Guid instrumentID, string quotation) {
            this.UpdateOverridedQuotationHighLowAsync(token, instrumentID, quotation, null);
        }
        
        /// <remarks/>
        public void UpdateOverridedQuotationHighLowAsync(Token token, System.Guid instrumentID, string quotation, object userState) {
            if ((this.UpdateOverridedQuotationHighLowOperationCompleted == null)) {
                this.UpdateOverridedQuotationHighLowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOverridedQuotationHighLowOperationCompleted);
            }
            this.InvokeAsync("UpdateOverridedQuotationHighLow", new object[] {
                        token,
                        instrumentID,
                        quotation}, this.UpdateOverridedQuotationHighLowOperationCompleted, userState);
        }
        
        private void OnUpdateOverridedQuotationHighLowOperationCompleted(object arg) {
            if ((this.UpdateOverridedQuotationHighLowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOverridedQuotationHighLowCompleted(this, new UpdateOverridedQuotationHighLowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccountStatus", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccountStatus(Token token, System.Guid accountId, System.Guid instrumentId, OrderType orderType, bool needOutputPrice, out string buyPrice, out string sellPrice) {
            object[] results = this.Invoke("GetAccountStatus", new object[] {
                        token,
                        accountId,
                        instrumentId,
                        orderType,
                        needOutputPrice});
            buyPrice = ((string)(results[1]));
            sellPrice = ((string)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatusAsync(Token token, System.Guid accountId, System.Guid instrumentId, OrderType orderType, bool needOutputPrice) {
            this.GetAccountStatusAsync(token, accountId, instrumentId, orderType, needOutputPrice, null);
        }
        
        /// <remarks/>
        public void GetAccountStatusAsync(Token token, System.Guid accountId, System.Guid instrumentId, OrderType orderType, bool needOutputPrice, object userState) {
            if ((this.GetAccountStatusOperationCompleted == null)) {
                this.GetAccountStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatusOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatus", new object[] {
                        token,
                        accountId,
                        instrumentId,
                        orderType,
                        needOutputPrice}, this.GetAccountStatusOperationCompleted, userState);
        }
        
        private void OnGetAccountStatusOperationCompleted(object arg) {
            if ((this.GetAccountStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatusCompleted(this, new GetAccountStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetMatchInfoCommands", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MatchInfoCommand[] GetMatchInfoCommands(System.Guid[] instrumentIds) {
            object[] results = this.Invoke("GetMatchInfoCommands", new object[] {
                        instrumentIds});
            return ((MatchInfoCommand[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchInfoCommandsAsync(System.Guid[] instrumentIds) {
            this.GetMatchInfoCommandsAsync(instrumentIds, null);
        }
        
        /// <remarks/>
        public void GetMatchInfoCommandsAsync(System.Guid[] instrumentIds, object userState) {
            if ((this.GetMatchInfoCommandsOperationCompleted == null)) {
                this.GetMatchInfoCommandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchInfoCommandsOperationCompleted);
            }
            this.InvokeAsync("GetMatchInfoCommands", new object[] {
                        instrumentIds}, this.GetMatchInfoCommandsOperationCompleted, userState);
        }
        
        private void OnGetMatchInfoCommandsOperationCompleted(object arg) {
            if ((this.GetMatchInfoCommandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchInfoCommandsCompleted(this, new GetMatchInfoCommandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ChangeLeverage", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeLeverage(Token token, System.Guid accountId, int leverage, out decimal necessary) {
            object[] results = this.Invoke("ChangeLeverage", new object[] {
                        token,
                        accountId,
                        leverage});
            necessary = ((decimal)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeLeverageAsync(Token token, System.Guid accountId, int leverage) {
            this.ChangeLeverageAsync(token, accountId, leverage, null);
        }
        
        /// <remarks/>
        public void ChangeLeverageAsync(Token token, System.Guid accountId, int leverage, object userState) {
            if ((this.ChangeLeverageOperationCompleted == null)) {
                this.ChangeLeverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeLeverageOperationCompleted);
            }
            this.InvokeAsync("ChangeLeverage", new object[] {
                        token,
                        accountId,
                        leverage}, this.ChangeLeverageOperationCompleted, userState);
        }
        
        private void OnChangeLeverageOperationCompleted(object arg) {
            if ((this.ChangeLeverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeLeverageCompleted(this, new ChangeLeverageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/NotifyPasswordChanged", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyPasswordChanged(System.Guid customerId, string loginName, string newPassword) {
            object[] results = this.Invoke("NotifyPasswordChanged", new object[] {
                        customerId,
                        loginName,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyPasswordChangedAsync(System.Guid customerId, string loginName, string newPassword) {
            this.NotifyPasswordChangedAsync(customerId, loginName, newPassword, null);
        }
        
        /// <remarks/>
        public void NotifyPasswordChangedAsync(System.Guid customerId, string loginName, string newPassword, object userState) {
            if ((this.NotifyPasswordChangedOperationCompleted == null)) {
                this.NotifyPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("NotifyPasswordChanged", new object[] {
                        customerId,
                        loginName,
                        newPassword}, this.NotifyPasswordChangedOperationCompleted, userState);
        }
        
        private void OnNotifyPasswordChangedOperationCompleted(object arg) {
            if ((this.NotifyPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyPasswordChangedCompleted(this, new NotifyPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/InstalmentPayoff", RequestNamespace="http://www.omnicare.com/StateServer/", ResponseNamespace="http://www.omnicare.com/StateServer/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError InstalmentPayoff(System.Guid submitorId, System.Guid accountId, System.Guid currencyId, decimal sumSourcePaymentAmount, decimal sumSourceTerminateFee, string instalmentXml, string terminateXml) {
            object[] results = this.Invoke("InstalmentPayoff", new object[] {
                        submitorId,
                        accountId,
                        currencyId,
                        sumSourcePaymentAmount,
                        sumSourceTerminateFee,
                        instalmentXml,
                        terminateXml});
            return ((TransactionError)(results[0]));
        }
        
        /// <remarks/>
        public void InstalmentPayoffAsync(System.Guid submitorId, System.Guid accountId, System.Guid currencyId, decimal sumSourcePaymentAmount, decimal sumSourceTerminateFee, string instalmentXml, string terminateXml) {
            this.InstalmentPayoffAsync(submitorId, accountId, currencyId, sumSourcePaymentAmount, sumSourceTerminateFee, instalmentXml, terminateXml, null);
        }
        
        /// <remarks/>
        public void InstalmentPayoffAsync(System.Guid submitorId, System.Guid accountId, System.Guid currencyId, decimal sumSourcePaymentAmount, decimal sumSourceTerminateFee, string instalmentXml, string terminateXml, object userState) {
            if ((this.InstalmentPayoffOperationCompleted == null)) {
                this.InstalmentPayoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstalmentPayoffOperationCompleted);
            }
            this.InvokeAsync("InstalmentPayoff", new object[] {
                        submitorId,
                        accountId,
                        currencyId,
                        sumSourcePaymentAmount,
                        sumSourceTerminateFee,
                        instalmentXml,
                        terminateXml}, this.InstalmentPayoffOperationCompleted, userState);
        }
        
        private void OnInstalmentPayoffOperationCompleted(object arg) {
            if ((this.InstalmentPayoffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstalmentPayoffCompleted(this, new InstalmentPayoffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public void CancelAsync1(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
   
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum ExchangeSystem {
        
        /// <remarks/>
        Local,
        
        /// <remarks/>
        Bursa,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AsyncResult {
        
        private System.Guid idField;
        
        private string methodNameField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string MethodName {
            get {
                return this.methodNameField;
            }
            set {
                this.methodNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class InstrumentGroupStateChange {
        
        private System.Guid groupIdField;
        
        private SecurityTradingStatus stateField;
        
        /// <remarks/>
        public System.Guid GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public SecurityTradingStatus State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum SecurityTradingStatus {
        
        /// <remarks/>
        TradingHalt,
        
        /// <remarks/>
        PriceIndication,
        
        /// <remarks/>
        ReadyToTrade,
        
        /// <remarks/>
        NotAvailableForTrading,
        
        /// <remarks/>
        UnknownOrInvalid,
        
        /// <remarks/>
        PreOpen,
        
        /// <remarks/>
        OpeningRotation,
        
        /// <remarks/>
        PreCross,
        
        /// <remarks/>
        Cross,
        
        /// <remarks/>
        NoCancel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class InstrumentStateChange {
        
        private System.Guid instrumentIdField;
        
        private SecurityTradingStatus statusField;
        
        /// <remarks/>
        public System.Guid InstrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public SecurityTradingStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class PriceRange {
        
        private System.Guid instrumentIdField;
        
        private System.Nullable<double> highLimitPriceField;
        
        private System.Nullable<double> lowLimitPriceField;
        
        /// <remarks/>
        public System.Guid InstrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> HighLimitPrice {
            get {
                return this.highLimitPriceField;
            }
            set {
                this.highLimitPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LowLimitPrice {
            get {
                return this.lowLimitPriceField;
            }
            set {
                this.lowLimitPriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class TradeMessage {
        
        private System.Guid messageIdField;
        
        private System.Guid instrumentIdField;
        
        private System.DateTime timestampField;
        
        private decimal priceField;
        
        private AggressorSide aggressorSideField;
        
        private double volumeField;
        
        private double tradeVolumeField;
        
        private double totalVolumeField;
        
        private int transactionsField;
        
        /// <remarks/>
        public System.Guid MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid InstrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public AggressorSide AggressorSide {
            get {
                return this.aggressorSideField;
            }
            set {
                this.aggressorSideField = value;
            }
        }
        
        /// <remarks/>
        public double Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public double TradeVolume {
            get {
                return this.tradeVolumeField;
            }
            set {
                this.tradeVolumeField = value;
            }
        }
        
        /// <remarks/>
        public double TotalVolume {
            get {
                return this.totalVolumeField;
            }
            set {
                this.totalVolumeField = value;
            }
        }
        
        /// <remarks/>
        public int Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum AggressorSide {
        
        /// <remarks/>
        Buy,
        
        /// <remarks/>
        Sell,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class OverridedQuotation {
        
        private System.Guid quotePolicyIDField;
        
        private System.Guid instrumentIDField;
        
        private System.DateTime timestampField;
        
        private string askField;
        
        private string bidField;
        
        private string highField;
        
        private string lowField;
        
        private string volumeField;
        
        private string totalVolumeField;
        
        private string originField;
        
        private System.Guid dealerIDField;
        
        /// <remarks/>
        public System.Guid QuotePolicyID {
            get {
                return this.quotePolicyIDField;
            }
            set {
                this.quotePolicyIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
            }
        }
        
        /// <remarks/>
        public string Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
            }
        }
        
        /// <remarks/>
        public string High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        public string Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        public string Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public string TotalVolume {
            get {
                return this.totalVolumeField;
            }
            set {
                this.totalVolumeField = value;
            }
        }
        
        /// <remarks/>
        public string Origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid DealerID {
            get {
                return this.dealerIDField;
            }
            set {
                this.dealerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class OriginQuotation {
        
        private bool hasWatchOnlyQuotePoliciesField;
        
        private System.Guid instrumentIDField;
        
        private System.DateTime timestampField;
        
        private string askField;
        
        private string bidField;
        
        private string highField;
        
        private string lowField;
        
        private string originField;
        
        private bool isProblematicField;
        
        private string volumeField;
        
        private string totalVolumeField;
        
        private System.Guid dealereIDField;
        
        private bool fromDealerField;
        
        /// <remarks/>
        public bool HasWatchOnlyQuotePolicies {
            get {
                return this.hasWatchOnlyQuotePoliciesField;
            }
            set {
                this.hasWatchOnlyQuotePoliciesField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
            }
        }
        
        /// <remarks/>
        public string Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
            }
        }
        
        /// <remarks/>
        public string High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        public string Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        public string Origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProblematic {
            get {
                return this.isProblematicField;
            }
            set {
                this.isProblematicField = value;
            }
        }
        
        /// <remarks/>
        public string Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public string TotalVolume {
            get {
                return this.totalVolumeField;
            }
            set {
                this.totalVolumeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid DealereID {
            get {
                return this.dealereIDField;
            }
            set {
                this.dealereIDField = value;
            }
        }
        
        /// <remarks/>
        public bool FromDealer {
            get {
                return this.fromDealerField;
            }
            set {
                this.fromDealerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class PendingItem {
        
        private string priceField;
        
        private decimal quantityField;
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class TimeAndSale {
        
        private System.Guid instrumentIdField;
        
        private System.Guid[] accountIdsField;
        
        private System.DateTime timestampField;
        
        private string priceField;
        
        private decimal quantityField;
        
        /// <remarks/>
        public System.Guid InstrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] AccountIds {
            get {
                return this.accountIdsField;
            }
            set {
                this.accountIdsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResetCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PlaceCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AcceptPlaceCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CancelCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RejectCancelLmtOrderCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecuteCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssignCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Execute2Command))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeleteCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResetAlertLevelCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountUpdateCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AlertCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CutCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChatCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HitCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SourceInstrumentCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmailCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuotationSourceCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AsyncCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FixChartCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FixChartCommand2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CompositeCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BestLimitsCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InstrumentGroupStateChangeCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InstrumentStateChangeCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderModificationRequestCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApplyOrderModificationCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PriceRangeCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TradeCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OpenInterestCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeliveryCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CancelDeliveryCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NotifyDeliveryCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NotifyScrapDepositCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NotifyScrapDepositCanceledCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PriceAlertCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(KickoutCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransferCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InstrumentUpdateCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NewsCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuotationCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateAccountLockCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuoteCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Quote2Command))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CancelQuote2Command))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnswerCommand))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MatchInfoCommand))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public abstract partial class Command {
        
        private int sequenceField;
        
        private System.Xml.XmlNode contentField;
        
        private DebugId debugIdField;
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public DebugId DebugId {
            get {
                return this.debugIdField;
            }
            set {
                this.debugIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum DebugId {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        VerifyTransaction,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class ResetCommand : Command {
        
        private System.Guid instrumentIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class PlaceCommand : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AcceptPlaceCommand : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        private System.Guid transactionIDField;
        
        private TransactionError errorCodeField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public TransactionError ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum TransactionError {
        
        /// <remarks/>
        NoLinkedServer,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        RuntimeError,
        
        /// <remarks/>
        DbOperationFailed,
        
        /// <remarks/>
        TransactionAlreadyExists,
        
        /// <remarks/>
        HasNoOrders,
        
        /// <remarks/>
        InvalidRelation,
        
        /// <remarks/>
        InvalidLotBalance,
        
        /// <remarks/>
        ExceedOpenLotBalance,
        
        /// <remarks/>
        InvalidPrice,
        
        /// <remarks/>
        AccountIsNotTrading,
        
        /// <remarks/>
        AccountResetFailed,
        
        /// <remarks/>
        InstrumentIsNotAccepting,
        
        /// <remarks/>
        TimingIsNotAcceptable,
        
        /// <remarks/>
        OrderTypeIsNotAcceptable,
        
        /// <remarks/>
        HasUnassignedOvernightOrders,
        
        /// <remarks/>
        HasNoAccountsLocked,
        
        /// <remarks/>
        IsLockedByAgent,
        
        /// <remarks/>
        IsNotLockedByAgent,
        
        /// <remarks/>
        ExceedAssigningLotBalance,
        
        /// <remarks/>
        LossExecutedOrderInOco,
        
        /// <remarks/>
        OrderLotExceedMaxLot,
        
        /// <remarks/>
        OpenOrderNotExists,
        
        /// <remarks/>
        AssigningOrderNotExists,
        
        /// <remarks/>
        TransactionNotExists,
        
        /// <remarks/>
        TransactionCannotBeCanceled,
        
        /// <remarks/>
        TransactionCannotBeExecuted,
        
        /// <remarks/>
        OrderCannotBeDeleted,
        
        /// <remarks/>
        NecessaryIsNotWithinThreshold,
        
        /// <remarks/>
        MarginIsNotEnough,
        
        /// <remarks/>
        IsNotAccountOwner,
        
        /// <remarks/>
        InvalidOrderRelation,
        
        /// <remarks/>
        TradePolicyIsNotActive,
        
        /// <remarks/>
        SetPriceTooCloseToMarket,
        
        /// <remarks/>
        HasNoQuotationExists,
        
        /// <remarks/>
        AccountIsInAlerting,
        
        /// <remarks/>
        DailyQuotationIsNotIntegrated,
        
        /// <remarks/>
        LimitStopAddPositionNotAllowed,
        
        /// <remarks/>
        MooMocNewPositionNotAllowed,
        
        /// <remarks/>
        TransactionCannotBeBooked,
        
        /// <remarks/>
        OnlySptMktIsAllowedForPreCheck,
        
        /// <remarks/>
        InvalidTransactionPhase,
        
        /// <remarks/>
        ExecuteTimeMustBeInTradingTime,
        
        /// <remarks/>
        DatabaseDataIntegralityViolated,
        
        /// <remarks/>
        PriceIsOutOfDate,
        
        /// <remarks/>
        ShortSellNotAllowed,
        
        /// <remarks/>
        InvalidInstalmentTrade,
        
        /// <remarks/>
        PrepaymentIsNotAllowed,
        
        /// <remarks/>
        HitIsReseted,
        
        /// <remarks/>
        ExistPendingLimitCloseOrder,
        
        /// <remarks/>
        BuySellCoExistNotAllow,
        
        /// <remarks/>
        OpenOrderIsNotAllowedAtBPoint,
        
        /// <remarks/>
        TimeSpanBetweenOrders,
        
        /// <remarks/>
        TransactionExpired,
        
        /// <remarks/>
        FillOnMarketCloseNotAllowed,
        
        /// <remarks/>
        InstrumentNotInTradePolicy,
        
        /// <remarks/>
        AmendedOrderNotFound,
        
        /// <remarks/>
        InitialOrderCanNotBeAmended,
        
        /// <remarks/>
        InvalidResetStatusWhenAssign,
        
        /// <remarks/>
        AlreadyValued,
        
        /// <remarks/>
        OutOfAcceptDQVariation,
        
        /// <remarks/>
        PriceIsDisabled,
        
        /// <remarks/>
        TransactionStateViolated,
        
        /// <remarks/>
        PriceChangedSincePlace,
        
        /// <remarks/>
        ExceedMaxOpenLot,
        
        /// <remarks/>
        ReplacedWithMaxLot,
        
        /// <remarks/>
        ExceedMaxPhysicalValue,
        
        /// <remarks/>
        BalanceOrEquityIsShort,
        
        /// <remarks/>
        SplittedForHasShortSell,
        
        /// <remarks/>
        AdjustedToFullPaidOrderForHasShortSell,
        
        /// <remarks/>
        MultipleCloseOrderNotFound,
        
        /// <remarks/>
        MultipleCloseOnlyExecutedOrderAllowed,
        
        /// <remarks/>
        MultipleCloseOnlyOpenOrderAllowed,
        
        /// <remarks/>
        MultipleCloseHasNoLotBalance,
        
        /// <remarks/>
        MultipleCloseOnlySameContractSizeAllowed,
        
        /// <remarks/>
        MultipleCloseOnlySameAccountAllowed,
        
        /// <remarks/>
        MultipleCloseOnlySameInstrumentAllowed,
        
        /// <remarks/>
        MultipleCloseOppositeNotFound,
        
        /// <remarks/>
        MultipleCloseNotSortByCode,
        
        /// <remarks/>
        MultipleCloseNotAllowed,
        
        /// <remarks/>
        IsCuttingByRemoteSystem,
        
        /// <remarks/>
        Action_ShouldAutoFill,
        
        /// <remarks/>
        Action_NeedDealerConfirmCanceling,
        
        /// <remarks/>
        RedoLimitOrder_PartialSuccess,
        
        /// <remarks/>
        RedoLimitOrder_AllFailed,
        
        /// <remarks/>
        AccountIsIntializing,
        
        /// <remarks/>
        AccountIsInReset,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class CancelCommand : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        private System.Guid transactionIDField;
        
        private TransactionError errorCodeField;
        
        private CancelReason cancelReasonField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public TransactionError ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public CancelReason CancelReason {
            get {
                return this.cancelReasonField;
            }
            set {
                this.cancelReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum CancelReason {
        
        /// <remarks/>
        CustomerCanceled,
        
        /// <remarks/>
        DealerCanceled,
        
        /// <remarks/>
        RiskMonitorCanceled,
        
        /// <remarks/>
        MooMocNewPositionNotAllowed,
        
        /// <remarks/>
        InitialOrderCanNotBeAmended,
        
        /// <remarks/>
        OrderExpired,
        
        /// <remarks/>
        InvalidPrice,
        
        /// <remarks/>
        RiskMonitorDelete,
        
        /// <remarks/>
        AccountResetFailed,
        
        /// <remarks/>
        NecessaryIsNotWithinThreshold,
        
        /// <remarks/>
        MarginIsNotEnough,
        
        /// <remarks/>
        AccountIsNotTrading,
        
        /// <remarks/>
        InstrumentIsNotAccepting,
        
        /// <remarks/>
        TimingIsNotAcceptable,
        
        /// <remarks/>
        OrderTypeIsNotAcceptable,
        
        /// <remarks/>
        HasNoAccountsLocked,
        
        /// <remarks/>
        IsLockedByAgent,
        
        /// <remarks/>
        LossExecutedOrderInOco,
        
        /// <remarks/>
        ExceedOpenLotBalance,
        
        /// <remarks/>
        OneCancelOther,
        
        /// <remarks/>
        AccountIsInAlerting,
        
        /// <remarks/>
        LimitStopAddPositionNotAllowed,
        
        /// <remarks/>
        TransactionCannotBeBooked,
        
        /// <remarks/>
        OnlySptMktIsAllowedForPreCheck,
        
        /// <remarks/>
        InvalidTransactionPhase,
        
        /// <remarks/>
        TransactionExpired,
        
        /// <remarks/>
        OtherReason,
        
        /// <remarks/>
        PriceChanged,
        
        /// <remarks/>
        OpenOrderIsClosed,
        
        /// <remarks/>
        ReplacedWithMaxLot,
        
        /// <remarks/>
        SplittedForHasShortSell,
        
        /// <remarks/>
        AdjustedToFullPaidOrderForHasShortSell,
        
        /// <remarks/>
        TimeSpanBetweenOrders,
        
        /// <remarks/>
        MarketPausedOrClosed,
        
        /// <remarks/>
        PriceMustBeGreaterThanZero,
        
        /// <remarks/>
        MarketPriceOrdersNotSupportedByOppositeLimit,
        
        /// <remarks/>
        SellOrderStopPriceMustBeBelowLastTradePrice,
        
        /// <remarks/>
        BuyOrderStopPriceMustBeAboveLastTradePrice,
        
        /// <remarks/>
        OrderTypeNotPermittedInPreOpen,
        
        /// <remarks/>
        OrderPriceOutsideTheLimits,
        
        /// <remarks/>
        OrderPriceOutsideBands,
        
        /// <remarks/>
        OrderTypeNotPermittedForGroup,
        
        /// <remarks/>
        OrderCannotBeModifiedInNoCancel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class RejectCancelLmtOrderCommand : Command {
        
        private System.Guid accountIDField;
        
        private System.Guid transactionIDField;
        
        private TransactionError errorCodeField;
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public TransactionError ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class ExecuteCommand : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        private TransactionError errorCodeField;
        
        private System.Guid tranIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public TransactionError ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TranID {
            get {
                return this.tranIDField;
            }
            set {
                this.tranIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AssignCommand : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class Execute2Command : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class DeleteCommand : Command {
        
        private System.Guid instrumentIDField;
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class ResetAlertLevelCommand : Command {
        
        private System.Guid[] accountIDsField;
        
        private AlertLevel[] alterLevelsField;
        
        /// <remarks/>
        public System.Guid[] AccountIDs {
            get {
                return this.accountIDsField;
            }
            set {
                this.accountIDsField = value;
            }
        }
        
        /// <remarks/>
        public AlertLevel[] AlterLevels {
            get {
                return this.alterLevelsField;
            }
            set {
                this.alterLevelsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum AlertLevel {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Call,
        
        /// <remarks/>
        Notify,
        
        /// <remarks/>
        Cut,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AccountUpdateCommand : Command {
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AlertCommand : Command {
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class CutCommand : Command {
        
        private System.Guid accountIDField;
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class ChatCommand : Command {
        
        private System.Guid[] accountGroupIDsField;
        
        private System.Guid[] customerIDsField;
        
        private System.Nullable<System.Guid> accountIdField;
        
        /// <remarks/>
        public System.Guid[] AccountGroupIDs {
            get {
                return this.accountGroupIDsField;
            }
            set {
                this.accountGroupIDsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] CustomerIDs {
            get {
                return this.customerIDsField;
            }
            set {
                this.customerIDsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class HitCommand : Command {
        
        private bool isForBinaryOptionHitField;
        
        private System.Guid accountIdForBinaryOptionHitField;
        
        /// <remarks/>
        public bool IsForBinaryOptionHit {
            get {
                return this.isForBinaryOptionHitField;
            }
            set {
                this.isForBinaryOptionHitField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid AccountIdForBinaryOptionHit {
            get {
                return this.accountIdForBinaryOptionHitField;
            }
            set {
                this.accountIdForBinaryOptionHitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class UpdateCommand : Command {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class SourceInstrumentCommand : Command {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class EmailCommand : Command {
        
        private System.Guid transactionIDField;
        
        private string fromEmailField;
        
        private string toEmailsField;
        
        private string bodyField;
        
        private string subjectField;
        
        private string typeDescField;
        
        private bool isSentField;
        
        /// <remarks/>
        public System.Guid TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        public string ToEmails {
            get {
                return this.toEmailsField;
            }
            set {
                this.toEmailsField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string TypeDesc {
            get {
                return this.typeDescField;
            }
            set {
                this.typeDescField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSent {
            get {
                return this.isSentField;
            }
            set {
                this.isSentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class QuotationSourceCommand : Command {
        
        private string sourceNameField;
        
        /// <remarks/>
        public string SourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AsyncCommand : Command {
        
        private AsyncResult asyncResultField;
        
        private bool failedField;
        
        private string innerExceptionField;
        
        /// <remarks/>
        public AsyncResult AsyncResult {
            get {
                return this.asyncResultField;
            }
            set {
                this.asyncResultField = value;
            }
        }
        
        /// <remarks/>
        public bool Failed {
            get {
                return this.failedField;
            }
            set {
                this.failedField = value;
            }
        }
        
        /// <remarks/>
        public string InnerException {
            get {
                return this.innerExceptionField;
            }
            set {
                this.innerExceptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class FixChartCommand : Command {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class FixChartCommand2 : Command {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class CompositeCommand : Command {
        
        private Command[] commandsField;
        
        /// <remarks/>
        public Command[] Commands {
            get {
                return this.commandsField;
            }
            set {
                this.commandsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class BestLimitsCommand : Command {
        
        private BestLimit[] bestLimitsField;
        
        /// <remarks/>
        public BestLimit[] BestLimits {
            get {
                return this.bestLimitsField;
            }
            set {
                this.bestLimitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="iExchange.Common.BestLimit")]
    public partial class BestLimit {
        
        private System.Guid instrumentIDField;
        
        private byte sequenceField;
        
        private bool isBuyField;
        
        private System.Nullable<double> priceField;
        
        private System.Nullable<long> quantityField;
        
        private System.Nullable<int> numberOfOrderField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public byte Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBuy {
            get {
                return this.isBuyField;
            }
            set {
                this.isBuyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumberOfOrder {
            get {
                return this.numberOfOrderField;
            }
            set {
                this.numberOfOrderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class InstrumentGroupStateChangeCommand : Command {
        
        private InstrumentGroupStateChange instrumentGroupStateChangeField;
        
        /// <remarks/>
        public InstrumentGroupStateChange InstrumentGroupStateChange {
            get {
                return this.instrumentGroupStateChangeField;
            }
            set {
                this.instrumentGroupStateChangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class InstrumentStateChangeCommand : Command {
        
        private InstrumentStateChange instrumentStateChangeField;
        
        /// <remarks/>
        public InstrumentStateChange InstrumentStateChange {
            get {
                return this.instrumentStateChangeField;
            }
            set {
                this.instrumentStateChangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class OrderModificationRequestCommand : Command {
        
        private System.Guid idField;
        
        private System.Guid transactionIdField;
        
        private System.Guid orderIdField;
        
        private System.Guid instrumentIdField;
        
        private string newLotField;
        
        private string newSetPriceField;
        
        private string newSetPrice2Field;
        
        /// <remarks/>
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid transactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid orderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid instrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public string newLot {
            get {
                return this.newLotField;
            }
            set {
                this.newLotField = value;
            }
        }
        
        /// <remarks/>
        public string newSetPrice {
            get {
                return this.newSetPriceField;
            }
            set {
                this.newSetPriceField = value;
            }
        }
        
        /// <remarks/>
        public string newSetPrice2 {
            get {
                return this.newSetPrice2Field;
            }
            set {
                this.newSetPrice2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class ApplyOrderModificationCommand : Command {
        
        private System.Guid modificationIdField;
        
        private OrderModifyResult resultField;
        
        private System.Guid accountIdField;
        
        /// <remarks/>
        public System.Guid modificationId {
            get {
                return this.modificationIdField;
            }
            set {
                this.modificationIdField = value;
            }
        }
        
        /// <remarks/>
        public OrderModifyResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum OrderModifyResult {
        
        /// <remarks/>
        Confirmed,
        
        /// <remarks/>
        Canceled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class PriceRangeCommand : Command {
        
        private PriceRange priceRangeField;
        
        /// <remarks/>
        public PriceRange PriceRange {
            get {
                return this.priceRangeField;
            }
            set {
                this.priceRangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class TradeCommand : Command {
        
        private TradeMessage tradeMessageField;
        
        /// <remarks/>
        public TradeMessage TradeMessage {
            get {
                return this.tradeMessageField;
            }
            set {
                this.tradeMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class OpenInterestCommand : Command {
        
        private System.Guid instrumentIdField;
        
        private double openInterestQuantityField;
        
        /// <remarks/>
        public System.Guid InstrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public double OpenInterestQuantity {
            get {
                return this.openInterestQuantityField;
            }
            set {
                this.openInterestQuantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class DeliveryCommand : Command {
        
        private System.Xml.XmlNode deliveryNodeField;
        
        private System.Guid accountIdField;
        
        /// <remarks/>
        public System.Xml.XmlNode deliveryNode {
            get {
                return this.deliveryNodeField;
            }
            set {
                this.deliveryNodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class CancelDeliveryCommand : Command {
        
        private System.Guid deliveryRequestIdField;
        
        private System.Guid accountIdField;
        
        private int statusField;
        
        /// <remarks/>
        public System.Guid deliveryRequestId {
            get {
                return this.deliveryRequestIdField;
            }
            set {
                this.deliveryRequestIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class NotifyDeliveryCommand : Command {
        
        private System.Guid deliveryRequestIdField;
        
        private System.Guid accountIdField;
        
        private DeliveryRequestStatus deliveryRequestStatusField;
        
        private System.Nullable<System.Guid> approvedIdField;
        
        private System.Nullable<System.DateTime> approvedTimeField;
        
        private System.Nullable<System.DateTime> deliveryTimeField;
        
        private System.Nullable<System.DateTime> avalibleDeliveryTimeField;
        
        /// <remarks/>
        public System.Guid deliveryRequestId {
            get {
                return this.deliveryRequestIdField;
            }
            set {
                this.deliveryRequestIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public DeliveryRequestStatus deliveryRequestStatus {
            get {
                return this.deliveryRequestStatusField;
            }
            set {
                this.deliveryRequestStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> approvedId {
            get {
                return this.approvedIdField;
            }
            set {
                this.approvedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> approvedTime {
            get {
                return this.approvedTimeField;
            }
            set {
                this.approvedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> deliveryTime {
            get {
                return this.deliveryTimeField;
            }
            set {
                this.deliveryTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> avalibleDeliveryTime {
            get {
                return this.avalibleDeliveryTimeField;
            }
            set {
                this.avalibleDeliveryTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum DeliveryRequestStatus {
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Stocked,
        
        /// <remarks/>
        Delivered,
        
        /// <remarks/>
        OrderCreated,
        
        /// <remarks/>
        Hedge,
        
        /// <remarks/>
        Cancelled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class NotifyScrapDepositCommand : Command {
        
        private System.Guid scrapDepositIdField;
        
        private string scrapDepositCodeField;
        
        private System.Guid accountIdField;
        
        private System.Guid scrapInstrumentIdField;
        
        private string scrapInstrumentCodeField;
        
        private int quantityDecimalDigitsField;
        
        private string unitCodeField;
        
        private System.Guid tradeInstrumentIdField;
        
        private System.DateTime submitTimeField;
        
        private decimal rawQuantityField;
        
        private System.Nullable<decimal> adjustedQuantityField;
        
        private System.Nullable<decimal> finalQuantityField;
        
        private string validatorIdField;
        
        private byte statusField;
        
        private System.DateTime acceptTimeField;
        
        /// <remarks/>
        public System.Guid scrapDepositId {
            get {
                return this.scrapDepositIdField;
            }
            set {
                this.scrapDepositIdField = value;
            }
        }
        
        /// <remarks/>
        public string scrapDepositCode {
            get {
                return this.scrapDepositCodeField;
            }
            set {
                this.scrapDepositCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid scrapInstrumentId {
            get {
                return this.scrapInstrumentIdField;
            }
            set {
                this.scrapInstrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public string scrapInstrumentCode {
            get {
                return this.scrapInstrumentCodeField;
            }
            set {
                this.scrapInstrumentCodeField = value;
            }
        }
        
        /// <remarks/>
        public int quantityDecimalDigits {
            get {
                return this.quantityDecimalDigitsField;
            }
            set {
                this.quantityDecimalDigitsField = value;
            }
        }
        
        /// <remarks/>
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid tradeInstrumentId {
            get {
                return this.tradeInstrumentIdField;
            }
            set {
                this.tradeInstrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime submitTime {
            get {
                return this.submitTimeField;
            }
            set {
                this.submitTimeField = value;
            }
        }
        
        /// <remarks/>
        public decimal rawQuantity {
            get {
                return this.rawQuantityField;
            }
            set {
                this.rawQuantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> adjustedQuantity {
            get {
                return this.adjustedQuantityField;
            }
            set {
                this.adjustedQuantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> finalQuantity {
            get {
                return this.finalQuantityField;
            }
            set {
                this.finalQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string validatorId {
            get {
                return this.validatorIdField;
            }
            set {
                this.validatorIdField = value;
            }
        }
        
        /// <remarks/>
        public byte status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime acceptTime {
            get {
                return this.acceptTimeField;
            }
            set {
                this.acceptTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class NotifyScrapDepositCanceledCommand : Command {
        
        private System.Guid scrapDepositIdField;
        
        private System.Guid accountIdField;
        
        private System.DateTime cancelTimeField;
        
        private CancelReason cancelReasonField;
        
        /// <remarks/>
        public System.Guid scrapDepositId {
            get {
                return this.scrapDepositIdField;
            }
            set {
                this.scrapDepositIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime cancelTime {
            get {
                return this.cancelTimeField;
            }
            set {
                this.cancelTimeField = value;
            }
        }
        
        /// <remarks/>
        public CancelReason cancelReason {
            get {
                return this.cancelReasonField;
            }
            set {
                this.cancelReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class PriceAlertCommand : Command {
        
        private System.Guid userIdField;
        
        /// <remarks/>
        public System.Guid userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class KickoutCommand : Command {
        
        private System.Guid[] accountIDsField;
        
        private System.Guid[] instrumentIDsField;
        
        /// <remarks/>
        public System.Guid[] accountIDs {
            get {
                return this.accountIDsField;
            }
            set {
                this.accountIDsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] instrumentIDs {
            get {
                return this.instrumentIDsField;
            }
            set {
                this.instrumentIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class TransferCommand : Command {
        
        private TransferAction actionField;
        
        private System.Guid transferIdField;
        
        private System.Guid remitterIdField;
        
        private System.Guid payeeIdField;
        
        /// <remarks/>
        public TransferAction Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid TransferId {
            get {
                return this.transferIdField;
            }
            set {
                this.transferIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid RemitterId {
            get {
                return this.remitterIdField;
            }
            set {
                this.remitterIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PayeeId {
            get {
                return this.payeeIdField;
            }
            set {
                this.payeeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum TransferAction {
        
        /// <remarks/>
        Apply,
        
        /// <remarks/>
        Accept,
        
        /// <remarks/>
        Decline,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class InstrumentUpdateCommand : Command {
        
        private System.Guid instrumentIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class NewsCommand : Command {
        
        private News[] newsCollectionField;
        
        /// <remarks/>
        public News[] NewsCollection {
            get {
                return this.newsCollectionField;
            }
            set {
                this.newsCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="iExchange.Common.News")]
    public partial class News {
        
        private System.Guid idField;
        
        private string languageField;
        
        private System.DateTime publishTimeField;
        
        private string titleField;
        
        private string contentsField;
        
        private bool isExpiredField;
        
        /// <remarks/>
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublishTime {
            get {
                return this.publishTimeField;
            }
            set {
                this.publishTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsExpired {
            get {
                return this.isExpiredField;
            }
            set {
                this.isExpiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class QuotationCommand : Command {
        
        private OriginQuotation[] originQsField;
        
        private OverridedQuotation[] overridedQsField;
        
        /// <remarks/>
        public OriginQuotation[] OriginQs {
            get {
                return this.originQsField;
            }
            set {
                this.originQsField = value;
            }
        }
        
        /// <remarks/>
        public OverridedQuotation[] OverridedQs {
            get {
                return this.overridedQsField;
            }
            set {
                this.overridedQsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class UpdateAccountLockCommand : Command {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class QuoteCommand : Command {
        
        private System.Guid customerIDField;
        
        private System.Guid instrumentIDField;
        
        private double quoteLotField;
        
        private int bSStatusField;
        
        private int setPriceMaxMovePipsField;
        
        /// <remarks/>
        public System.Guid CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public double QuoteLot {
            get {
                return this.quoteLotField;
            }
            set {
                this.quoteLotField = value;
            }
        }
        
        /// <remarks/>
        public int BSStatus {
            get {
                return this.bSStatusField;
            }
            set {
                this.bSStatusField = value;
            }
        }
        
        /// <remarks/>
        public int SetPriceMaxMovePips {
            get {
                return this.setPriceMaxMovePipsField;
            }
            set {
                this.setPriceMaxMovePipsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class Quote2Command : Command {
        
        private System.Guid customerIDField;
        
        private System.Guid instrumentIDField;
        
        private double buyQuoteLotField;
        
        private double sellQuoteLotField;
        
        private int tickField;
        
        /// <remarks/>
        public System.Guid CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public double BuyQuoteLot {
            get {
                return this.buyQuoteLotField;
            }
            set {
                this.buyQuoteLotField = value;
            }
        }
        
        /// <remarks/>
        public double SellQuoteLot {
            get {
                return this.sellQuoteLotField;
            }
            set {
                this.sellQuoteLotField = value;
            }
        }
        
        /// <remarks/>
        public int Tick {
            get {
                return this.tickField;
            }
            set {
                this.tickField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class CancelQuote2Command : Command {
        
        private System.Guid customerIDField;
        
        private System.Guid instrumentIDField;
        
        private double buyQuoteLotField;
        
        private double sellQuoteLotField;
        
        /// <remarks/>
        public System.Guid CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
        
        /// <remarks/>
        public double BuyQuoteLot {
            get {
                return this.buyQuoteLotField;
            }
            set {
                this.buyQuoteLotField = value;
            }
        }
        
        /// <remarks/>
        public double SellQuoteLot {
            get {
                return this.sellQuoteLotField;
            }
            set {
                this.sellQuoteLotField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class AnswerCommand : Command {
        
        private System.Guid instrumentIDField;
        
        /// <remarks/>
        public System.Guid InstrumentID {
            get {
                return this.instrumentIDField;
            }
            set {
                this.instrumentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public partial class MatchInfoCommand : Command {
        
        private System.Guid instrumentIdField;
        
        private System.Guid[] accountIdsField;
        
        private TimeAndSale[] timeAndSalesField;
        
        private PendingItem[] bestBuysField;
        
        private PendingItem[] bestSellsField;
        
        /// <remarks/>
        public System.Guid InstrumentId {
            get {
                return this.instrumentIdField;
            }
            set {
                this.instrumentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] AccountIds {
            get {
                return this.accountIdsField;
            }
            set {
                this.accountIdsField = value;
            }
        }
        
        /// <remarks/>
        public TimeAndSale[] TimeAndSales {
            get {
                return this.timeAndSalesField;
            }
            set {
                this.timeAndSalesField = value;
            }
        }
        
        /// <remarks/>
        public PendingItem[] BestBuys {
            get {
                return this.bestBuysField;
            }
            set {
                this.bestBuysField = value;
            }
        }
        
        /// <remarks/>
        public PendingItem[] BestSells {
            get {
                return this.bestSellsField;
            }
            set {
                this.bestSellsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.omnicare.com/StateServer/")]
    public enum OrderType {
        
        /// <remarks/>
        SpotTrade,
        
        /// <remarks/>
        Limit,
        
        /// <remarks/>
        Market,
        
        /// <remarks/>
        MarketOnOpen,
        
        /// <remarks/>
        MarketOnClose,
        
        /// <remarks/>
        OneCancelOther,
        
        /// <remarks/>
        Risk,
        
        /// <remarks/>
        Stop,
        
        /// <remarks/>
        MultipleClose,
        
        /// <remarks/>
        MarketToLimit,
        
        /// <remarks/>
        StopLimit,
        
        /// <remarks/>
        FAK_Market,
        
        /// <remarks/>
        BinaryOption,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetPriceAlertsCompletedEventHandler(object sender, SetPriceAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPriceAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPriceAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyTelephonePinResetCompletedEventHandler(object sender, NotifyTelephonePinResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyTelephonePinResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyTelephonePinResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyTransferCompletedEventHandler(object sender, ApplyTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AcceptTransferCompletedEventHandler(object sender, AcceptTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeclineTransferCompletedEventHandler(object sender, DeclineTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeclineTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeclineTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStateCompletedEventHandler(object sender, GetStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnRegisterCompletedEventHandler(object sender, UnRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInitDataCompletedEventHandler(object sender, GetInitDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInitDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInitDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int commandSequence {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInitData2CompletedEventHandler(object sender, GetInitData2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInitData2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInitData2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int commandSequence {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReplayQuotationCompletedEventHandler(object sender, ReplayQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplayQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplayQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetQuotationCompletedEventHandler(object sender, SetQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FlushQuotationsCompletedEventHandler(object sender, FlushQuotationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlushQuotationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FlushQuotationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetBestLimitCompletedEventHandler(object sender, SetBestLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetBestLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetBestLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DiscardQuotationCompletedEventHandler(object sender, DiscardQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DiscardQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DiscardQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateInstrumentCompletedEventHandler(object sender, UpdateInstrumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInstrumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInstrumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateDealingPolicyDetailCompletedEventHandler(object sender, UpdateDealingPolicyDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDealingPolicyDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDealingPolicyDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCustomerPolicyCompletedEventHandler(object sender, UpdateCustomerPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEmployeePolicyCompletedEventHandler(object sender, UpdateEmployeePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateQuotePolicyCompletedEventHandler(object sender, UpdateQuotePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuotePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuotePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateQuotePoliciesCompletedEventHandler(object sender, UpdateQuotePoliciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuotePoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuotePoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInstrumentForSettingCompletedEventHandler(object sender, GetInstrumentForSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstrumentForSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstrumentForSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateInstrumentSettingCompletedEventHandler(object sender, UpdateInstrumentSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInstrumentSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInstrumentSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateInstrumentSetting2CompletedEventHandler(object sender, UpdateInstrumentSetting2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInstrumentSetting2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInstrumentSetting2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateOrderCompletedEventHandler(object sender, UpdateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAccountLockCompletedEventHandler(object sender, UpdateAccountLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QuoteWithSetPriceMaxMovePipsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Quote2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CancelQuoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AnswerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PlaceCompletedEventHandler(object sender, PlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string tranCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyDeliveryCompletedEventHandler(object sender, ApplyDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode deliveryRequire {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string balance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string usableMargin {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CancelDeliveryCompletedEventHandler(object sender, CancelDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyDeliveryApprovedCompletedEventHandler(object sender, NotifyDeliveryApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyDeliveryApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyDeliveryApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyDeliveryCompletedEventHandler(object sender, NotifyDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyDeliveredCompletedEventHandler(object sender, NotifyDeliveredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyDeliveredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyDeliveredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyScrapDepositCompletedEventHandler(object sender, NotifyScrapDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyScrapDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyScrapDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyScrapDepositCanceledCompletedEventHandler(object sender, NotifyScrapDepositCanceledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyScrapDepositCanceledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyScrapDepositCanceledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CancelCompletedEventHandler(object sender, CancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void EmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RejectCancelLmtOrderCompletedEventHandler(object sender, RejectCancelLmtOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectCancelLmtOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectCancelLmtOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlTran {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MultipleCloseCompletedEventHandler(object sender, MultipleCloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultipleCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultipleCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlTran {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AssignCompletedEventHandler(object sender, AssignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlTran {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlInstrument {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BookCompletedEventHandler(object sender, BookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlTran {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlAffectedOrders {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode affectedOrders {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlAccount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetHitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetAlertLevelCompletedEventHandler(object sender, ResetAlertLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetAlertLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetAlertLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountsCompletedEventHandler(object sender, GetAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccounts5CompletedEventHandler(object sender, GetAccounts5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccounts5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccounts5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOpenInterestInstrumentSummaryCompletedEventHandler(object sender, GetOpenInterestInstrumentSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenInterestInstrumentSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenInterestInstrumentSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOpenInterestSummaryCompletedEventHandler(object sender, GetOpenInterestSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenInterestSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenInterestSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOpenInterestSummaryOrderListCompletedEventHandler(object sender, GetOpenInterestSummaryOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenInterestSummaryOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenInterestSummaryOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupNetPositionCompletedEventHandler(object sender, GetGroupNetPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupNetPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupNetPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGroupNetPositionInstrumentCompletedEventHandler(object sender, GetGroupNetPositionInstrumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupNetPositionInstrumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupNetPositionInstrumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountsForCutCompletedEventHandler(object sender, GetAccountsForCutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsForCutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsForCutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountsForInitCompletedEventHandler(object sender, GetAccountsForInitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsForInitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsForInitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrdersForGetAutoPriceCompletedEventHandler(object sender, GetOrdersForGetAutoPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersForGetAutoPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersForGetAutoPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RedoLimitOrderCompletedEventHandler(object sender, RedoLimitOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RedoLimitOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RedoLimitOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public TransactionError returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFromTNUCompletedEventHandler(object sender, UpdateFromTNUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFromTNUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFromTNUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Update1CompletedEventHandler(object sender, Update1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetActiveSourceCompletedEventHandler(object sender, SetActiveSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetActiveSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetActiveSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetActiveSourceInstrumentCompletedEventHandler(object sender, SetActiveSourceInstrumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetActiveSourceInstrumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetActiveSourceInstrumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void VerifyTransactionCompletedEventHandler(object sender, VerifyTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccounts2CompletedEventHandler(object sender, GetAccounts2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccounts2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccounts2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrdersCompletedEventHandler(object sender, GetOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AcceptPlaceCompletedEventHandler(object sender, AcceptPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAcountInfoCompletedEventHandler(object sender, GetAcountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAcountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAcountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMemoryBalanceNecessaryEquityExcludeAlertedCompletedEventHandler(object sender, GetMemoryBalanceNecessaryEquityExcludeAlertedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemoryBalanceNecessaryEquityExcludeAlertedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemoryBalanceNecessaryEquityExcludeAlertedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetNewsCompletedEventHandler(object sender, SetNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateHighLowCompletedEventHandler(object sender, UpdateHighLowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHighLowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHighLowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string instrumentCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool highBid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool lowBid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public System.DateTime updateTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RestoreHighLowCompletedEventHandler(object sender, RestoreHighLowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreHighLowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreHighLowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string instrumentCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newInput {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool isUpdateHigh {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool highBid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public bool lowBid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public int returnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FixOverridedQuotationHistoryCompletedEventHandler(object sender, FixOverridedQuotationHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FixOverridedQuotationHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FixOverridedQuotationHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetHistoryQuotationCompletedEventHandler(object sender, SetHistoryQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetHistoryQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetHistoryQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateOverridedQuotationHighLowCompletedEventHandler(object sender, UpdateOverridedQuotationHighLowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOverridedQuotationHighLowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOverridedQuotationHighLowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountStatusCompletedEventHandler(object sender, GetAccountStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string buyPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string sellPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMatchInfoCommandsCompletedEventHandler(object sender, GetMatchInfoCommandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchInfoCommandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchInfoCommandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchInfoCommand[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchInfoCommand[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeLeverageCompletedEventHandler(object sender, ChangeLeverageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeLeverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeLeverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal necessary {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyPasswordChangedCompletedEventHandler(object sender, NotifyPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InstalmentPayoffCompletedEventHandler(object sender, InstalmentPayoffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstalmentPayoffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstalmentPayoffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionError Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionError)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591